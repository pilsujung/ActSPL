/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:38:17 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.List;
import java.util.Set;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.MemoryBudget;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class Lock_ESTest3 extends Lock_ESTest_scaffolding3 {

  @Test
  public void test02()  throws Throwable  {
      Lock lock0 = new Lock((Long) null);
      int int0 = lock0.nWaiters();
      assertEquals(0, int0);
  }


  @Test
  public void test07()  throws Throwable  {
      Lock lock0 = new Lock();
      // Undeclared exception!
      try { 
        lock0.transferMultiple((Locker) null, (Locker[]) null, (MemoryBudget) null, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Lock", e);
      }
  }

  @Test
  public void test28()  throws Throwable  {
      Lock lock0 = new Lock((Long) null);
      Txn txn0 = new Txn();
      boolean boolean0 = lock0.isWaiter(txn0);
      assertFalse(boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      Lock lock0 = new Lock();
      Set set0 = lock0.release((Locker) null, (MemoryBudget) null, 0);
      assertNull(set0);
  }

  @Test
  public void test42()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.flushWaiter((Locker) null, (MemoryBudget) null, 0);
  }

  @Test
  public void test43()  throws Throwable  {
      Lock lock0 = new Lock();
      List list0 = lock0.getWaitersListClone();
      assertTrue(list0.isEmpty());
  }

  
}
