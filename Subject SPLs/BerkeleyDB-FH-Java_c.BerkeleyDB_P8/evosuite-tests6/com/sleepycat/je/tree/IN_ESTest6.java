/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:01:01 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.logging.Level;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.cleaner.FileSummary;
import com.sleepycat.je.cleaner.UtilizationTracker;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.DbConfigManager;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.dbi.INList;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.log.LogManager;

import de.ovgu.cide.jakutil.ReturnBoolean;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class IN_ESTest6 extends IN_ESTest_scaffolding6 {

  @Test
  public void test000()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.isCompressible();
  }

  @Test
  public void test001()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.entryZeroKeyComparesLow();
  }

  @Test
  public void test002()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      dBIN0.updateMemorySize(lN0, lN0);
  }

  @Test
  public void test003()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_trackProvisionalObsolete iN_IN_trackProvisionalObsolete0 = new IN.IN_trackProvisionalObsolete(dBIN0, dBIN0, (-1335L), (-740));
      iN_IN_trackProvisionalObsolete0.execute();
  }

  @Test
  public void test004()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.isSoughtNode(4294967296L, false);
  }

  @Test
  public void test005()  throws Throwable  {
      IN iN0 = new IN();
      iN0.setNodeId((-1134L));
      iN0.compareTo(iN0);
  }

  @Test
  public void test006()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.hook626();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // IN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test007()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl((File) null, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test008()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_trackProvisionalObsolete iN_IN_trackProvisionalObsolete0 = new IN.IN_trackProvisionalObsolete(dBIN0, dBIN0, (-1335L), (-740));
      IN.IN_isValidForDelete iN_IN_isValidForDelete0 = new IN.IN_isValidForDelete(dBIN0);
      iN_IN_isValidForDelete0.execute();
      Node node0 = null;
      try {  
      node0 = iN_IN_isValidForDelete0.child;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test009()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[19];
      byte byte0 = (byte)0;
      BIN bIN0 = null;
      try {
        bIN0 = new BIN(databaseImpl0, byteArray0, (int) (byte)7, (int) (byte)34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test010()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.validateSubtreeBeforeDelete((-752));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -752
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test011()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[3];
      BIN bIN0 = null;
      try {
        bIN0 = new BIN(databaseImpl0, byteArray0, (-366), (int) (byte)97);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test012()  throws Throwable  {
      BIN bIN0 = new BIN();
      SearchResult searchResult0 = new SearchResult();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-740));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         assertThrownBy("java.io.StringWriter", e);
      }
  }

  @Test
  public void test013()  throws Throwable  {
      DIN dIN0 = new DIN();
      SearchResult searchResult0 = new SearchResult();
      // Undeclared exception!
      try { 
        dIN0.descendOnParentSearch(searchResult0, false, false, (-740), (Node) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test014()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = false;
      NameLN nameLN0 = new NameLN();
      // Undeclared exception!
      try { 
        bIN0.updateEntry(64, (Node) nameLN0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test015()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getChildEvictionType();
  }

  @Test
  public void test016()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.updateMemorySize((-167L), 1866L);
  }

  @Test
  public void test017()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_trackProvisionalObsolete iN_IN_trackProvisionalObsolete0 = new IN.IN_trackProvisionalObsolete(dBIN0, dBIN0, (-1335L), (-740));
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        dBIN0.splitSpecial(dBIN0, dBIN0.ACCUMULATED_LIMIT, iN_IN_trackProvisionalObsolete0.memDelta, byteArray0, Key.DUMP_BINARY);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DBIN", e);
      }
  }

  @Test
  public void test018()  throws Throwable  {
      IN iN0 = new IN();
      iN0.setLastFullLsn(528);
  }

  @Test
  public void test019()  throws Throwable  {
      BIN bIN0 = new BIN();
      SearchResult searchResult0 = new SearchResult();
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      String string0 = fileSummaryLN0.dumpString(fileSummary0.totalLNCount, searchResult0.exactParentFound);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(string0);
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        bIN0.readFromLog(byteBuffer0, byte0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test020()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.isEvictionProhibited();
  }

  @Test
  public void test021()  throws Throwable  {
      DIN dIN0 = new DIN();
      SearchResult searchResult0 = new SearchResult();
      byte[] byteArray0 = new byte[7];
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(dIN0, dIN0, searchResult0.index, byteArray0[0], byteArray0[3]);
      EnvironmentImpl environmentImpl0 = null;
      try {  
      environmentImpl0 = iN_IN_splitInternal0.env;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test022()  throws Throwable  {
      BIN bIN0 = new BIN();
      SearchResult searchResult0 = new SearchResult();
      byte[] byteArray0 = new byte[4];
      bIN0.getEntryInMemorySize(byteArray0, searchResult0.parent);
  }

  @Test
  public void test023()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.getDupTreeKey();
  }

  @Test
  public void test024()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.endTag();
  }

  @Test
  public void test027()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = false;
      bIN0.canBeAncestor(boolean0);
  }

  @Test
  public void test028()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.beginTag();
  }

  @Test
  public void test029()  throws Throwable  {
      IN iN0 = new IN();
      INList iNList0 = null;
      EnvironmentImpl environmentImpl0 = null;
      UtilizationTracker utilizationTracker0 = null;
      try {
        utilizationTracker0 = new UtilizationTracker(environmentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.UtilizationTracker", e);
      }
  }

  @Test
  public void test031()  throws Throwable  {
      IN.IN_flushProvisionalObsolete iN_IN_flushProvisionalObsolete0 = new IN.IN_flushProvisionalObsolete((IN) null, (LogManager) null);
      // Undeclared exception!
      try { 
        iN_IN_flushProvisionalObsolete0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test032()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dBIN0.dumpLogAdditional(stringBuffer0);
  }

  @Test
  public void test033()  throws Throwable  {
      IN iN0 = new IN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("k%Py<Y*vn?.`6");
      // Undeclared exception!
      try { 
        iN0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test034()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.verifyMemorySize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test035()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.trackProvisionalObsolete((IN) null, 1456L, 1456L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test036()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.splitInternal((IN) null, (-1), 0, 320);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test037()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.setLsnElement(0, 297L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test038()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.latchNoWait();
      try { 
        dIN0.latchNoWait(true);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test039()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.isDirty(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test040()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[4];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte)108, (byte)32);
      // Undeclared exception!
      try { 
        dBIN0.insertEntry(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test041()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.initMemorySize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test042()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.initEntryLsn((-2003));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test043()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.hook624();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // IN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test045()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.getKeyComparator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test046()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.getChildEvictionType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test047()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.fetchTarget(255);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test048()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.computeMemorySize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test049()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.compareTo("CleanIN:");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.sleepycat.je.tree.IN
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test050()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[1];
      IN iN0 = null;
      try {
        iN0 = new IN(databaseImpl0, byteArray0, 1669, (-2090));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test051()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.dumpString((byte) (-120), false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -118
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test052()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.latch(true);
  }

  @Test
  public void test053()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.setDirty(true);
  }

  @Test
  public void test054()  throws Throwable  {
      DIN dIN0 = new DIN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      dIN0.setDatabase(databaseImpl0);
  }

  @Test
  public void test055()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.releaseLatchIfOwner();
  }

  @Test
  public void test056()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.isLatchOwner();
  }

  @Test
  public void test057()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.latchNoWait(true);
  }

  @Test
  public void test058()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.setGeneration();
  }

  @Test
  public void test059()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setLsn((-2145344719), (-2145344719));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8555716
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test060()  throws Throwable  {
      IN iN0 = new IN();
      iN0.shortClassName();
  }

  @Test
  public void test061()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getLevel();
  }

  @Test
  public void test062()  throws Throwable  {
      IN iN0 = new IN();
      iN0.isDbRoot();
  }

  @Test
  public void test063()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.releaseLatch();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test064()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.latch();
  }

  @Test
  public void test065()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getDatabase();
  }

  @Test
  public void test066()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[1];
      IN iN0 = null;
      try {
        iN0 = new IN(databaseImpl0, byteArray0, (int) (byte) (-2), (int) (byte) (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test067()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getEvictionType();
  }

  @Test
  public void test068()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.getEvictionType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test069()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.updateMemorySize(dBIN0, dBIN0);
  }

  @Test
  public void test070()  throws Throwable  {
      IN iN0 = new IN();
      iN0.updateMemorySize((ChildReference) null, (ChildReference) null);
  }

  @Test
  public void test071()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (-740));
      dBIN0.updateMemorySize(childReference0, childReference0);
  }

  @Test
  public void test072()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[2];
      IN.IN_setEntry iN_IN_setEntry0 = new IN.IN_setEntry(dIN0, (-740), dIN0, byteArray0, (byte)53, (byte) (-67));
      // Undeclared exception!
      try { 
        iN_IN_setEntry0._this.hook619(false);
        fail("Expecting exception: ReturnBoolean");
      
      } catch(ReturnBoolean e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test073()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[4];
      iN0.latchNoWait();
      IN.IN_verify iN_IN_verify0 = new IN.IN_verify(iN0, byteArray0);
      iN_IN_verify0.execute();
  }

  @Test
  public void test074()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[3];
      dBIN0.verify(byteArray0);
  }

  @Test
  public void test075()  throws Throwable  {
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal((IN) null, (IN) null, 2140179281, 0, 2140179281);
      iN_IN_splitInternal0.high = 2128;
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook630();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test076()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_validateSubtreeBeforeDelete iN_IN_validateSubtreeBeforeDelete0 = new IN.IN_validateSubtreeBeforeDelete(dBIN0, (-748));
      iN_IN_validateSubtreeBeforeDelete0.hook629();
  }

  @Test
  public void test077()  throws Throwable  {
      IN iN0 = new IN();
      ChildReference childReference0 = new ChildReference();
      try { 
        iN0.insertEntry(childReference0);
        fail("Expecting exception: InconsistentNodeException");
      
      } catch(InconsistentNodeException e) {
         //
         // Node 0 should have been split before calling insertEntry
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_insertEntry1", e);
      }
  }

  @Test
  public void test078()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.dump(16);
  }

  @Test
  public void test079()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, (-2433L), (byte)62);
      childReference0.toString();
  }

  @Test
  public void test080()  throws Throwable  {
      IN iN0 = new IN();
      iN0.dumpKeys();
  }

  @Test
  public void test081()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.getLogSize();
  }

  @Test
  public void test083()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[4];
      dBIN0.deleteEntry(byteArray0, true);
  }

  @Test
  public void test084()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      dIN0.isKeyInBounds(byteArray0);
  }

  @Test
  public void test085()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.getDupCountLN();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // fetchTarget of null lsn IN=0 state=0 NULL_LSN without KnownDeleted
         //
         assertThrownBy("com.sleepycat.je.tree.ChildReference", e);
      }
  }

  @Test
  public void test086()  throws Throwable  {
      IN.makeFetchErrorMsg("8an'T ", (IN) null, (-1), (byte)51);
  }

  @Test
  public void test087()  throws Throwable  {
      IN.makeFetchErrorMsg("sy1MBO", (IN) null, 4294967295L, (byte) (-92));
  }

  @Test
  public void test088()  throws Throwable  {
      IN.isStatePendingDeleted((byte) (-49));
  }

  @Test
  public void test089()  throws Throwable  {
      IN.isStatePendingDeleted((byte)0);
  }

  @Test
  public void test090()  throws Throwable  {
      IN.isStateKnownDeleted((byte)1);
  }

  @Test
  public void test091()  throws Throwable  {
      IN.isStateKnownDeleted((byte)24);
  }

  @Test
  public void test092()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setMigrate((-2182), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2182
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test093()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setKnownDeletedLeaveTarget((-1320));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1320
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test094()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.isSoughtNode((-1L), false);
  }

  @Test
  public void test095()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      DBIN dBIN1 = new DBIN();
      dBIN0.compareTo(dBIN1);
      try { 
        dBIN0.hook623();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test096()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[19];
      BIN bIN0 = null;
      try {
        bIN0 = new BIN(databaseImpl0, byteArray0, (int) (byte)7, (int) (byte)34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_insertEntry1 iN_IN_insertEntry1_0 = new IN.IN_insertEntry1(dBIN0, (ChildReference) null);
      iN_IN_insertEntry1_0.hook646();
  }

  @Test
  public void test098()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_insertEntry1 iN_IN_insertEntry1_0 = new IN.IN_insertEntry1(dBIN0, (ChildReference) null);
      iN_IN_insertEntry1_0.hook647();
      iN_IN_insertEntry1_0.hook646();
  }

  @Test
  public void test099()  throws Throwable  {
      IN.IN_updateEntry2 iN_IN_updateEntry2_0 = new IN.IN_updateEntry2((IN) null, 319, (Node) null, 1264L);
      // Undeclared exception!
      try { 
        iN_IN_updateEntry2_0.hook642();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test100()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_trackProvisionalObsolete iN_IN_trackProvisionalObsolete0 = new IN.IN_trackProvisionalObsolete(dIN0, dIN0, 0L, 0L);
      // Undeclared exception!
      try { 
        iN_IN_trackProvisionalObsolete0.hook652();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_trackProvisionalObsolete", e);
      }
  }

  @Test
  public void test101()  throws Throwable  {
      IN.IN_trackProvisionalObsolete iN_IN_trackProvisionalObsolete0 = new IN.IN_trackProvisionalObsolete((IN) null, (IN) null, (-3672L), 2673L);
      // Undeclared exception!
      try { 
        iN_IN_trackProvisionalObsolete0.hook651();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      IN.IN_updateEntryCompareKey iN_IN_updateEntryCompareKey0 = new IN.IN_updateEntryCompareKey((IN) null, 1492, (Node) null, 0L, byteArray0);
      // Undeclared exception!
      try { 
        iN_IN_updateEntryCompareKey0.hook644();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test103()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[5];
      IN.IN_updateEntryCompareKey iN_IN_updateEntryCompareKey0 = new IN.IN_updateEntryCompareKey(dIN0, (-740), dIN0, (-740), byteArray0);
      // Undeclared exception!
      try { 
        iN_IN_updateEntryCompareKey0.execute();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -740
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      IN.IN_setEntry iN_IN_setEntry0 = new IN.IN_setEntry((IN) null, (-3767), (Node) null, byteArray0, (-3767), (byte)88);
      // Undeclared exception!
      try { 
        iN_IN_setEntry0.hook640();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      IN.IN_setEntry iN_IN_setEntry0 = new IN.IN_setEntry((IN) null, (-3767), (Node) null, byteArray0, (-3767), (byte)88);
      iN_IN_setEntry0.hook641();
  }

  @Test
  public void test106()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, 1147, 217, (-740));
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook631();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test107()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, (-1647), (-1647), 65536);
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook630();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test108()  throws Throwable  {
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal((IN) null, (IN) null, (-273), (-273), 462);
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook650();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test109()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test110()  throws Throwable  {
      IN iN0 = new IN();
      DBIN dBIN0 = new DBIN();
      iN0.adjustCursors(dBIN0, 5, 0);
  }

  @Test
  public void test111()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.getGeneration();
  }

  @Test
  public void test112()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.setInListResident(false);
  }

  @Test
  public void test113()  throws Throwable  {
      IN iN0 = new IN();
      iN0.validateSubtreeBeforeDelete(30);
  }

  @Test
  public void test114()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getEntryLsnLongArray();
  }

  @Test
  public void test115()  throws Throwable  {
      IN iN0 = new IN();
      iN0.entryZeroKeyComparesLow();
  }

  @Test
  public void test116()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.getIdentifierKey();
  }

  @Test
  public void test117()  throws Throwable  {
      IN iN0 = new IN();
      iN0.logEntryIsTransactional();
  }

  @Test
  public void test118()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.getDupKey();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // IN.getDupKey() called
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test119()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.hook637();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test120()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook621();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test121()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getLogType();
      assertEquals(0L, iN0.getGeneration());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertEquals(0, iN0.getLevel());
      assertFalse(iN0.isDbRoot());
      assertTrue(iN0.needsSplitting());
      assertFalse(iN0.getDirty());
  }

  @Test
  public void test122()  throws Throwable  {
      IN iN0 = new IN();
      boolean boolean0 = iN0.isRoot();
      assertEquals(0, iN0.getLevel());
      assertEquals("IN", iN0.shortClassName());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertFalse(boolean0);
      assertEquals(0L, iN0.getGeneration());
      assertFalse(iN0.getDirty());
      assertTrue(iN0.needsSplitting());
  }

  @Test
  public void test123()  throws Throwable  {
      BIN bIN0 = new BIN();
      NameLN nameLN0 = new NameLN();
      // Undeclared exception!
      try { 
        bIN0.updateEntry(64, (Node) nameLN0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test124()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setPendingDeleted((-1484));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1484
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test125()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.hook625((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test126()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.postFetchInit((DatabaseImpl) null, 127L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test127()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      DbConfigManager dbConfigManager0 = new DbConfigManager(environmentConfig0);
      long long0 = IN.computeArraysOverhead(dbConfigManager0);
      assertEquals(2200L, long0);
  }

  @Test
  public void test128()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_updateEntry2 iN_IN_updateEntry2_0 = new IN.IN_updateEntry2(iN0, (-740), iN0, (-1134L));
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        iN0.updateEntry(2139922085, iN_IN_updateEntry2_0.node, 1715L, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2139922085
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test129()  throws Throwable  {
      IN iN0 = new IN();
      iN0.setGeneration((-1134L));
      assertEquals((-1134L), iN0.getGeneration());
  }

  @Test
  public void test130()  throws Throwable  {
      DIN dIN0 = new DIN();
      assertFalse(dIN0.getDirty());
      
      byte[] byteArray0 = new byte[2];
      dIN0.setIdentifierKey(byteArray0);
      assertTrue(dIN0.getDirty());
  }

  @Test
  public void test131()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook627();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test132()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.hook638(bIN0);
      assertTrue(bIN0.needsSplitting());
      assertEquals(0L, bIN0.getGeneration());
      assertEquals(0, bIN0.getLevel());
      assertEquals((-1L), bIN0.getLastFullVersion());
  }

  @Test
  public void test133()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        dIN0.setEntry(2140301428, (Node) null, byteArray0, 2140301428, (byte) (-29));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2140301428
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test134()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.clearKnownDeleted(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test135()  throws Throwable  {
      IN iN0 = new IN();
      iN0.adjustCursorsForInsert(2352);
      assertEquals(0, iN0.getLevel());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertTrue(iN0.needsSplitting());
      assertEquals("IN", iN0.shortClassName());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertEquals(0L, iN0.getGeneration());
      assertFalse(iN0.getDirty());
  }

  @Test
  public void test136()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.getLsn(2795);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11181
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test137()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      try { 
        dBIN0.hook622();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test138()  throws Throwable  {
      IN iN0 = new IN();
      boolean boolean0 = iN0.isCompressible();
      assertEquals(0, iN0.getLevel());
      assertTrue(iN0.needsSplitting());
      assertFalse(iN0.isDbRoot());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertFalse(boolean0);
      assertEquals(0L, iN0.getGeneration());
  }

  @Test
  public void test139()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.updateEntry((-977), (long) (-977), 1000L, 5361088685328984543L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3908
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test140()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = iN0.getEntryLsnByteArray();
      assertEquals(0L, iN0.getGeneration());
      assertFalse(iN0.getDirty());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertEquals("IN", iN0.shortClassName());
      assertTrue(iN0.needsSplitting());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, iN0.getLevel());
      assertFalse(iN0.isRoot());
  }

  @Test
  public void test141()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.getDatabaseId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test142()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        iN0.createNewInstance(byteArray0, 32, 518);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test143()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.trackProvisionalObsolete(dBIN0, 0L, 524288L);
      assertEquals(64L, dBIN0.getInMemorySize());
  }

  @Test
  public void test144()  throws Throwable  {
      IN iN0 = new IN();
      DatabaseId databaseId0 = new DatabaseId(16777216);
      byte[] byteArray0 = new byte[6];
      BINReference bINReference0 = new BINReference((byte)0, databaseId0, byteArray0);
      boolean boolean0 = iN0.compress(bINReference0, true);
      assertEquals(0, iN0.getLevel());
      assertEquals("IN", iN0.shortClassName());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertTrue(iN0.needsSplitting());
      assertFalse(boolean0);
      assertFalse(iN0.isDbRoot());
      assertEquals(0L, iN0.getGeneration());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertFalse(iN0.getDirty());
  }

  @Test
  public void test145()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.log((LogManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test146()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        iN0.findEntry(byteArray0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test147()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      long long0 = dBIN0.getLastFullVersion();
      assertEquals(0, dBIN0.getLevel());
      assertEquals(0L, dBIN0.getGeneration());
      assertEquals((-1L), long0);
      assertTrue(dBIN0.needsSplitting());
  }

  @Test
  public void test148()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.getTarget((-2145285608));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2145285608
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test149()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook620();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test150()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.accumulateStats((TreeWalkerStatsAccumulator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test151()  throws Throwable  {
      DIN dIN0 = new DIN();
      SearchResult searchResult0 = new SearchResult();
      searchResult0.parent = (IN) dIN0;
      try { 
        dIN0.descendOnParentSearch(searchResult0, false, false, 0L, searchResult0.parent, true);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test152()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getInMemorySize();
      assertEquals(0L, dIN0.getGeneration());
      assertEquals((-1L), dIN0.getLastFullVersion());
      assertEquals(0, dIN0.getLevel());
      assertFalse(dIN0.isRoot());
      assertTrue(dIN0.needsSplitting());
  }

  @Test
  public void test153()  throws Throwable  {
      BIN bIN0 = new BIN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        bIN0.postRecoveryInit(databaseImpl0, (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test154()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      ChildReference childReference0 = new ChildReference();
      // Undeclared exception!
      try { 
        dBIN0.insertEntry1(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test155()  throws Throwable  {
      IN iN0 = new IN();
      boolean boolean0 = iN0.deleteEntry((byte) (-106), false);
      assertEquals((-1L), iN0.getLastFullVersion());
      assertFalse(boolean0);
      assertEquals(0, iN0.getLevel());
      assertEquals("IN", iN0.shortClassName());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertTrue(iN0.needsSplitting());
      assertEquals(0L, iN0.getGeneration());
  }

  @Test
  public void test156()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      assertFalse(dBIN0.getDirty());
      
      dBIN0.setIsRoot(false);
      assertTrue(dBIN0.getDirty());
  }

  @Test
  public void test157()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.split((IN) null, (-1290), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DBIN", e);
      }
  }

  @Test
  public void test158()  throws Throwable  {
      IN iN0 = new IN();
      iN0.setProhibitNextDelta();
      assertTrue(iN0.needsSplitting());
      assertEquals(0, iN0.getAccumulatedDelta());
      assertEquals("IN", iN0.shortClassName());
      assertEquals(0, iN0.getLevel());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertEquals(0L, iN0.getGeneration());
      assertFalse(iN0.isDbRoot());
  }

  @Test
  public void test159()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.setKnownDeleted(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test160()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.verify((byte[]) null);
      //  // Unstable assertion: assertEquals(85L, dBIN0.getGeneration());
  }

  @Test
  public void test161()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      // Undeclared exception!
      try { 
        dBIN0.updateEntry(504, (Node) lN0, (long) 504);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 504
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test162()  throws Throwable  {
      IN iN0 = new IN();
      iN0.initEntryLsn(952);
      IN.IN_setLsn iN_IN_setLsn0 = new IN.IN_setLsn(iN0, 0, (-740));
      // Undeclared exception!
      try { 
        iN_IN_setLsn0.execute();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_setLsn", e);
      }
  }

  @Test
  public void test163()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_isValidForDelete iN_IN_isValidForDelete0 = new IN.IN_isValidForDelete(dBIN0);
      iN_IN_isValidForDelete0.execute();
      Node node0 = null;
      try {  
      node0 = iN_IN_isValidForDelete0.child;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test164()  throws Throwable  {
      IN iN0 = new IN();
      boolean boolean0 = iN0.isEvictable();
      assertEquals((-1L), iN0.getLastFullVersion());
      assertEquals(0L, iN0.getGeneration());
      assertTrue(boolean0);
      assertEquals(0, iN0.getLevel());
      assertEquals(0, iN0.getNEntries());
      assertTrue(iN0.needsSplitting());
      assertFalse(iN0.getDirty());
  }

  @Test
  public void test165()  throws Throwable  {
      IN.IN_deleteEntry iN_IN_deleteEntry0 = new IN.IN_deleteEntry((IN) null, 0, true);
      // Undeclared exception!
      try { 
        iN_IN_deleteEntry0.hook648();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test166()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      IN.IN_deleteEntry iN_IN_deleteEntry0 = new IN.IN_deleteEntry(dBIN0, 2101, false);
      // Undeclared exception!
      try { 
        iN_IN_deleteEntry0.hook649();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2101
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test167()  throws Throwable  {
      IN.IN_flushProvisionalObsolete iN_IN_flushProvisionalObsolete0 = new IN.IN_flushProvisionalObsolete((IN) null, (LogManager) null);
      // Undeclared exception!
      try { 
        iN_IN_flushProvisionalObsolete0.hook655();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test168()  throws Throwable  {
      IN.IN_flushProvisionalObsolete iN_IN_flushProvisionalObsolete0 = new IN.IN_flushProvisionalObsolete((IN) null, (LogManager) null);
      // Undeclared exception!
      try { 
        iN_IN_flushProvisionalObsolete0.hook656();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test169()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_setLsn iN_IN_setLsn0 = new IN.IN_setLsn(dIN0, 90, 33L);
      iN_IN_setLsn0.hook639();
      assertEquals(24L, dIN0.getInMemorySize());
  }

  @Test
  public void test170()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.updateEntry((-1), (long) (-1), (byte)35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }
}
