/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 18:51:36 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class TupleBinding_ESTest7 extends TupleBinding_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      Class<DoubleBinding> class0 = DoubleBinding.class;
      TupleBinding tupleBinding0 = TupleBinding.getPrimitiveBinding(class0);
      assertNull(tupleBinding0);
  }

  @Test
  public void test01()  throws Throwable  {
      DoubleBinding doubleBinding0 = new DoubleBinding();
      Byte byte0 = new Byte((byte)92);
      byte[] byteArray0 = new byte[7];
      TupleOutput tupleOutput0 = TupleBase.newOutput(byteArray0);
      doubleBinding0.objectToEntry((Object) byte0, tupleOutput0);
      assertEquals(0, doubleBinding0.getTupleBufferSize());
  }

  @Test
  public void test02()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      FloatBinding floatBinding0 = new FloatBinding();
      TupleOutput tupleOutput0 = floatBinding0.getTupleOutput(floatBinding0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((-4362.0));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      Byte byte0 = (Byte)byteBinding0.entryToObject(tupleInput0);
      assertEquals((byte)64, (byte)byte0);
  }

  @Test
  public void test03()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      byte[] byteArray0 = new byte[6];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-1426), (-2234));
      // Undeclared exception!
      try { 
        shortBinding0.objectToEntry((Object) null, databaseEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.ShortBinding", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      DoubleBinding doubleBinding0 = new DoubleBinding();
      // Undeclared exception!
      try { 
        doubleBinding0.objectToEntry((Object) databaseEntry0, databaseEntry0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.DatabaseEntry cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.DoubleBinding", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      byte[] byteArray0 = new byte[8];
      TupleOutput tupleOutput0 = TupleBase.newOutput(byteArray0);
      // Undeclared exception!
      try { 
        longBinding0.objectToEntry((Object) longBinding0, tupleOutput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.LongBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.LongBinding", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)68;
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      StringBinding stringBinding0 = new StringBinding();
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      byte[] byteArray0 = new byte[3];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-3220), (int) (byte) (-42));
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3220
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DoubleBinding doubleBinding0 = new DoubleBinding();
      byte[] byteArray0 = new byte[5];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, (int) (byte) (-90));
      // Undeclared exception!
      try { 
        doubleBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Class<Float> class0 = Float.class;
      FloatBinding floatBinding0 = (FloatBinding)TupleBinding.getPrimitiveBinding(class0);
      assertEquals(0, floatBinding0.getTupleBufferSize());
  }

  @Test
  public void test12()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      byte[] byteArray0 = new byte[1];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      stringBinding0.objectToEntry((Object) null, databaseEntry0);
      assertEquals(0, stringBinding0.getTupleBufferSize());
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      StringBinding stringBinding0 = new StringBinding();
      String string0 = (String)stringBinding0.entryToObject(databaseEntry0);
      assertEquals("", string0);
  }
}
