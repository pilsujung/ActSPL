/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 20:26:00 KST 2017
 */

package com.sleepycat.je.log;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.nio.ByteBuffer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class FileHeader_ESTest7 extends FileHeader_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader(13L, 13L);
      long long0 = fileHeader0.getLastEntryInPrevFileOffset();
      assertEquals(13L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader((-10L), (-10L));
      long long0 = fileHeader0.getLastEntryInPrevFileOffset();
      assertEquals((-10L), long0);
  }

  @Test
  public void test02()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      try { 
        fileHeader0.validate(" expected ", (-3455L));
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Wrong filenum in header for file  expected  expected -3455 got 0
         //
         assertThrownBy("com.sleepycat.je.log.FileHeader", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader((-1687L), (-2736L));
      assertFalse(fileHeader0.logEntryIsTransactional());
  }

  @Test
  public void test04()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader((-3166L), (-3166L));
      ByteBuffer byteBuffer0 = null;
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        fileHeader0.readFromLog((ByteBuffer) null, (byte) (-33));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = FileHeader.entrySize();
      assertEquals(24, int0);
  }

  @Test
  public void test06()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      // Undeclared exception!
      try { 
        fileHeader0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileHeader", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      boolean boolean0 = fileHeader0.validate("#[$]wbf):xyl74", 0L);
      assertTrue(boolean0);
  }

  @Test
  public void test08()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      try { 
        fileHeader0.validate(")i.ND#;k!Ok", 977L);
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Wrong filenum in header for file )i.ND#;k!Ok expected 977 got 0
         //
         assertThrownBy("com.sleepycat.je.log.FileHeader", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader((-3166L), (-3166L));
      fileHeader0.validate("", (-3166L));
      // Undeclared exception!
      try { 
        fileHeader0.readFromLog((ByteBuffer) null, (byte) (-33));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      fileHeader0.postLogWork(24);
      assertFalse(fileHeader0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test11()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader(0L, 0L);
      long long0 = fileHeader0.getLastEntryInPrevFileOffset();
      assertEquals(0L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      boolean boolean0 = fileHeader0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      LogEntryType logEntryType0 = fileHeader0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test14()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      String string0 = fileHeader0.toString();
      assertEquals("<FileHeader num=\"0x0\" lastEntryInPrevFileOffset=\"0x0\" logVersion=\"0x0\" time=\"null\"/>", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      boolean boolean0 = fileHeader0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      long long0 = fileHeader0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader(0L, 0L);
      boolean boolean0 = fileHeader0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader();
      // Undeclared exception!
      try { 
        fileHeader0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      FileHeader fileHeader0 = new FileHeader(0L, 0L);
      int int0 = fileHeader0.getLogSize();
      assertEquals(24, int0);
  }
}
