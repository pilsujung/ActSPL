/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 16:31:29 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LockType_ESTest4 extends LockType_ESTest_scaffolding4 {


  @Test
  public void test01()  throws Throwable  {
      LockType lockType0 = LockType.RANGE_READ;
      LockType lockType1 = LockType.WRITE;
      LockUpgrade lockUpgrade0 = lockType0.getUpgrade(lockType1);
      assertNotNull(lockUpgrade0);
  }




  @Test
  public void test06()  throws Throwable  {
      LockType lockType0 = LockType.READ;
      // Undeclared exception!
      try { 
        lockType0.getUpgrade((LockType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.LockType", e);
      }
  }


  @Test
  public void test08()  throws Throwable  {
      LockType lockType0 = LockType.NONE;
      // Undeclared exception!
      try { 
        lockType0.getConflict(lockType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("com.sleepycat.je.txn.LockType", e);
      }
  }





}
