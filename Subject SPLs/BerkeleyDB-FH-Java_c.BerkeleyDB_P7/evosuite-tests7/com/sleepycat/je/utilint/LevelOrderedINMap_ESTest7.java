/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 22:21:16 KST 2017
 */

package com.sleepycat.je.utilint;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.IN;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LevelOrderedINMap_ESTest7 extends LevelOrderedINMap_ESTest_scaffolding7 {

  @Test
  public void test0()  throws Throwable  {
      LevelOrderedINMap levelOrderedINMap0 = new LevelOrderedINMap();
      // Undeclared exception!
      try { 
        levelOrderedINMap0.putIN((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.utilint.LevelOrderedINMap", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LevelOrderedINMap levelOrderedINMap0 = new LevelOrderedINMap();
      BIN bIN0 = new BIN();
      levelOrderedINMap0.put(bIN0, bIN0);
      // Undeclared exception!
      try { 
        levelOrderedINMap0.putIN(bIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.BIN cannot be cast to java.lang.Integer
         //
         assertThrownBy("java.lang.Integer", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LevelOrderedINMap levelOrderedINMap0 = new LevelOrderedINMap();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[3];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, 2425, byteArray0, 1812);
      levelOrderedINMap0.putIN(dBIN0);
      levelOrderedINMap0.putIN(dBIN0);
      assertEquals(1, levelOrderedINMap0.size());
  }
}
