/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 20:05:01 KST 2017
 */

package com.sleepycat.je.dbi;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Comparator;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.BtreeStats;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.PreloadConfig;
import com.sleepycat.je.SecondaryDatabase;
import com.sleepycat.je.StatsConfig;
import com.sleepycat.je.VerifyConfig;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.utilint.TestHook;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class DatabaseImpl_ESTest7 extends DatabaseImpl_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTree((Tree) null);
      Tree tree0 = databaseImpl0.getTree();
      assertNull(tree0);
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setId((DatabaseId) null);
      DatabaseId databaseId0 = databaseImpl0.getId();
      assertNull(databaseId0);
  }

  @Test
  public void test02()  throws Throwable  {
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload((DatabaseImpl) null, preloadConfig0);
      // Undeclared exception!
      try { 
        databaseImpl_DatabaseImpl_preload0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      PreloadConfig preloadConfig0 = new PreloadConfig();
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload((DatabaseImpl) null, preloadConfig0);
      // Undeclared exception!
      try { 
        databaseImpl_DatabaseImpl_preload0.hook287();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl$DatabaseImpl_preload", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload(databaseImpl0, preloadConfig0);
      PreloadProcessor preloadProcessor0 = null;
      try {  
      preloadProcessor0 = databaseImpl_DatabaseImpl_preload0.callback;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test06()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Class<SecondaryDatabase> class0 = SecondaryDatabase.class;
      try { 
        DatabaseImpl.instantiateComparator(class0, "\"");
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Exception while trying to load \" Comparator class: java.lang.InstantiationException: com.sleepycat.je.SecondaryDatabase
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      String string0 = "";
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[4];
      DBIN dBIN0 = null;
      try {
        dBIN0 = new DBIN(databaseImpl0, byteArray0, (-1171), byteArray0, (-759));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.hook289();
      assertEquals(0, databaseImpl0.getBinDeltaPercent());
  }

  @Test
  public void test09()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("# If less than this percentage of entries are changed on a BIN,\n# logs a delta instead of a full version.");
      databaseImpl0.writeToLog(byteBuffer0);
      //  // Unstable assertion: assertEquals(245L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test10()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("l*Rw(t}");
      // Undeclared exception!
      try { 
        databaseImpl0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("<database id=\"0\"/>");
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog(byteBuffer0, (byte) (-128));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog((ByteBuffer) null, (byte) (-35));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTree((Tree) null);
      PreloadConfig preloadConfig0 = new PreloadConfig();
      // Undeclared exception!
      try { 
        databaseImpl0.preload(preloadConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.PreloadLSNTreeWalker", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        DatabaseImpl.instantiateComparator(class0, "~NCdI6q1'IK#P.)P-NO");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.util.Comparator
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setId((DatabaseId) null);
      // Undeclared exception!
      try { 
        databaseImpl0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.dumpString(1427);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1427
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTree((Tree) null);
      // Undeclared exception!
      try { 
        databaseImpl0.countRecords();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = new PreloadConfig();
      try { 
        databaseImpl0.preload(preloadConfig0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      String string0 = DatabaseImpl.serializeComparator((Comparator) null);
      assertEquals("", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      String string0 = databaseImpl0.getDebugName();
      assertNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      EnvironmentImpl environmentImpl0 = databaseImpl0.getDbEnvironment();
      assertNull(environmentImpl0);
  }

  @Test
  public void test22()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTree((Tree) null);
      VerifyConfig verifyConfig0 = new VerifyConfig();
      StatsConfig statsConfig0 = new StatsConfig();
      BtreeStats btreeStats0 = (BtreeStats)databaseImpl0.stat(statsConfig0);
      boolean boolean0 = databaseImpl0.verify(verifyConfig0, btreeStats0);
      //  // Unstable assertion: assertEquals(167L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      StatsConfig statsConfig0 = new StatsConfig();
      statsConfig0.setFast(true);
      databaseImpl0.stat(statsConfig0);
      //  // Unstable assertion: assertEquals(164L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test24()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      StatsConfig statsConfig0 = new StatsConfig();
      // Undeclared exception!
      try { 
        databaseImpl0.stat(statsConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      Comparator comparator0 = DatabaseImpl.instantiateComparator((Class) null, "O\"dl!mJ%");
      assertNull(comparator0);
  }

  @Test
  public void test26()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.dumpString(0);
      //  // Unstable assertion: assertEquals(148L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test27()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Database database0 = databaseImpl0.findPrimaryDatabase();
      assertNull(database0);
  }

  @Test
  public void test28()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      boolean boolean0 = databaseImpl0.hasOpenHandles();
      //  // Unstable assertion: assertEquals(141L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setId((DatabaseId) null);
      // Undeclared exception!
      try { 
        databaseImpl0.dumpString(23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxEntries();
      //  // Unstable assertion: assertEquals(132L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test31()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setPendingDeletedHook((TestHook) null);
      assertEquals(0, databaseImpl0.getNodeMaxEntries());
  }

  @Test
  public void test32()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Comparator comparator0 = databaseImpl0.getBtreeComparator();
      assertNull(comparator0);
  }

  @Test
  public void test34()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinMaxDeltas();
      //  // Unstable assertion: assertEquals(125L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test35()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      try { 
        databaseImpl0.countRecords();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }

  @Test
  public void test36()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseImpl databaseImpl1 = (DatabaseImpl)databaseImpl0.clone();
      assertFalse(databaseImpl1.logEntryIsTransactional());
  }

  @Test
  public void test37()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      boolean boolean0 = databaseImpl0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Comparator comparator0 = databaseImpl0.getDuplicateComparator();
      assertNull(comparator0);
  }

  @Test
  public void test39()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.getSortedDuplicates();
      //  // Unstable assertion: assertEquals(116L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test40()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinDeltaPercent();
      //  // Unstable assertion: assertEquals(112L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test41()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getLogSize();
      //  // Unstable assertion: assertEquals(82L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(22, int0);
  }

  @Test
  public void test42()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setDuplicateComparator((Comparator) null);
      assertEquals(0, databaseImpl0.getNodeMaxDupTreeEntries());
  }

  @Test
  public void test43()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test44()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setBtreeComparator((Comparator) null);
      //  // Unstable assertion: assertEquals(79L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test45()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getEofNodeId();
      //  // Unstable assertion: assertEquals(77L, long0);
  }

  @Test
  public void test46()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setDebugDatabaseName("PNu,,B");
      String string0 = databaseImpl0.getDebugName();
      assertEquals("PNu,,B", string0);
  }

  @Test
  public void test47()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTransactional(false);
      //  // Unstable assertion: assertEquals(72L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test48()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxDupTreeEntries();
      //  // Unstable assertion: assertEquals(68L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test49()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.addReferringHandle((Database) null);
      boolean boolean0 = databaseImpl0.hasOpenHandles();
      //  // Unstable assertion: assertEquals(63L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test50()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      BtreeStats btreeStats0 = (BtreeStats)databaseImpl0.getEmptyStats();
      VerifyConfig verifyConfig0 = new VerifyConfig();
      // Undeclared exception!
      try { 
        databaseImpl0.verify(verifyConfig0, btreeStats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(Integer.MAX_VALUE);
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      DatabaseImpl databaseImpl0 = null;
      try {
        databaseImpl0 = new DatabaseImpl((String) null, databaseId0, (EnvironmentImpl) null, databaseConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test52()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test53()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      StringWriter stringWriter0 = new StringWriter(90);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      databaseImpl0.dumpLog(stringBuffer0, true);
      //  // Unstable assertion: assertEquals(182, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(40L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test54()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test55()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.removeReferringHandle((Database) null);
      assertEquals(0, databaseImpl0.getBinMaxDeltas());
  }

  @Test
  public void test56()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.isTransactional();
      //  // Unstable assertion: assertEquals(36L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test57()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.hook288();
      assertFalse(databaseImpl0.isTransactional());
  }

  @Test
  public void test58()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getReferringHandleCount();
      assertEquals(0, int0);
  }

  @Test
  public void test59()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.getId();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(")WIYKjE:|@@PM");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog(byteBuffer1, (byte)22);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test60()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.setEnvironmentImpl((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test61()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      try { 
        databaseImpl0.preload(preloadConfig0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }
}
