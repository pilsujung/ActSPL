/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 19:23:16 KST 2017
 */

package com.sleepycat.je;

import static org.junit.Assert.assertEquals;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LockStats_ESTest7 extends LockStats_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWriteLocks((-628));
      int int0 = lockStats0.getNWriteLocks();
      assertEquals((-628), int0);
  }

  @Test
  public void test01()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWaits(86L);
      long long0 = lockStats0.getNWaits();
      assertEquals(86L, long0);
  }

  @Test
  public void test02()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWaits((-1));
      long long0 = lockStats0.getNWaits();
      assertEquals((-1L), long0);
  }

  @Test
  public void test03()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWaiters(494);
      int int0 = lockStats0.getNWaiters();
      assertEquals(494, int0);
  }

  @Test
  public void test04()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWaiters((-405));
      int int0 = lockStats0.getNWaiters();
      assertEquals((-405), int0);
  }

  @Test
  public void test05()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.accumulateNTotalLocks(2133);
      int int0 = lockStats0.getNTotalLocks();
      assertEquals(2133, int0);
  }

  @Test
  public void test06()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.accumulateNTotalLocks((-1));
      int int0 = lockStats0.getNTotalLocks();
      assertEquals((-1), int0);
  }

  @Test
  public void test07()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNRequests(1661L);
      long long0 = lockStats0.getNRequests();
      assertEquals(1661L, long0);
  }

  @Test
  public void test08()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNReadLocks(1166);
      int int0 = lockStats0.getNReadLocks();
      assertEquals(1166, int0);
  }

  @Test
  public void test09()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNReadLocks((-1678));
      int int0 = lockStats0.getNReadLocks();
      assertEquals((-1678), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNOwners((-1));
      int int0 = lockStats0.getNOwners();
      assertEquals((-1), int0);
  }

  @Test
  public void test11()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.hook64((StringBuffer) null);
      assertEquals(0L, lockStats0.getNRequests());
  }

  @Test
  public void test12()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      int int0 = lockStats0.getNWaiters();
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNRequests((-114L));
      long long0 = lockStats0.getNRequests();
      assertEquals((-114L), long0);
  }

  @Test
  public void test14()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      long long0 = lockStats0.getNWaits();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNWriteLocks(5037);
      int int0 = lockStats0.getNWriteLocks();
      assertEquals(5037, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      lockStats0.setNOwners(10);
      int int0 = lockStats0.getNOwners();
      assertEquals(10, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      int int0 = lockStats0.getNReadLocks();
      assertEquals(0, int0);
  }

  @Test
  public void test18()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      String string0 = lockStats0.toString();
      assertEquals("nTotalLocks=0\nnReadLocks=0\nnWriteLocks=0\nnWaiters=0\nnOwners=0\nnRequests=0\nnWaits=0\n", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      int int0 = lockStats0.getNOwners();
      assertEquals(0, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      int int0 = lockStats0.getNWriteLocks();
      assertEquals(0, int0);
  }

  @Test
  public void test21()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      long long0 = lockStats0.getNRequests();
      assertEquals(0L, long0);
  }

  @Test
  public void test22()  throws Throwable  {
      LockStats lockStats0 = new LockStats();
      int int0 = lockStats0.getNTotalLocks();
      assertEquals(0, int0);
  }
}
