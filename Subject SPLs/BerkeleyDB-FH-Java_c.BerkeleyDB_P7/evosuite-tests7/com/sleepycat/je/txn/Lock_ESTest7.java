/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:45:56 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.util.List;
import java.util.Set;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.dbi.MemoryBudget;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class Lock_ESTest7 extends Lock_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 26);
      int int0 = lock0.nOwners();
      assertEquals(1, int0);
  }

  @Test
  public void test01()  throws Throwable  {
      Long long0 = new Long((-85L));
      Lock lock0 = new Lock(long0);
      Long long1 = lock0.getNodeId();
      assertSame(long0, long1);
  }

  @Test
  public void test02()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      int int0 = lock0.nOwners();
      assertEquals(0, int0);
  }

  @Test
  public void test03()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.nWaiters();
      Txn txn0 = new Txn();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl((File) null, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook764((MemoryBudget) null, (-1103));
  }

  @Test
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 26);
      LockType lockType0 = LockType.NONE;
      // Undeclared exception!
      try { 
        lock0.lock(lockType0, txn0, false, (MemoryBudget) null, 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Lock", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      LockType lockType1 = LockType.NONE;
      // Undeclared exception!
      try { 
        lock0.lock(lockType1, (Locker) null, true, (MemoryBudget) null, 4475);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("com.sleepycat.je.txn.LockType", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 26);
      // Undeclared exception!
      try { 
        lock0.isOwnedWriteLock(txn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Lock", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      lock0.lock((LockType) null, (Locker) null, false, (MemoryBudget) null, 26);
      // Undeclared exception!
      try { 
        lock0.getWriteOwnerLocker();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Lock", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Lock lock0 = new Lock();
      String string0 = lock0.toString();
      assertEquals(" NodeId:null Owners: (none) Waiters: (none)", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      Locker locker0 = lock0.getWriteOwnerLocker();
      assertNull(locker0);
  }

  @Test
  public void test11()  throws Throwable  {
      Lock lock0 = new Lock();
      Locker locker0 = lock0.getWriteOwnerLocker();
      assertNull(locker0);
  }

  @Test
  public void test13()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 26);
      Locker[] lockerArray0 = new Locker[9];
      // Undeclared exception!
      try { 
        lock0.transferMultiple(txn0, lockerArray0, (MemoryBudget) null, (-83));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Lock", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 26);
      LockType lockType0 = lock0.transfer(txn0, txn0, (MemoryBudget) null, 9);
      assertNull(lockType0);
  }

  @Test
  public void test15()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      lock0.demote((Locker) null);
  }

  @Test
  public void test16()  throws Throwable  {
      Long long0 = new Long((-85L));
      Lock lock0 = new Lock(long0);
      lock0.demote((Locker) null);
  }

  @Test
  public void test17()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      LockGrantType lockGrantType0 = lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 4475);
      assertEquals("EXISTING", lockGrantType0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      String string0 = lock0.toString();
      assertEquals(" NodeId:null Owners:<LockInfo locker=\"null\" type=\"READ\"/> Waiters: (none)", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      Lock lock0 = new Lock();
      Txn txn0 = new Txn();
      boolean boolean0 = lock0.isWaiter(txn0);
      assertFalse(boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      boolean boolean0 = lock0.isOwnedWriteLock((Locker) null);
      assertFalse(boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      Lock lock0 = new Lock();
      Txn txn0 = new Txn();
      boolean boolean0 = lock0.isOwner(txn0, (LockType) null);
      assertFalse(boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      boolean boolean0 = lock0.isOwner((Locker) null, lockType0);
      assertTrue(boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      Lock lock0 = new Lock();
      boolean boolean0 = lock0.isOwnedWriteLock((Locker) null);
      assertFalse(boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      lock0.lock((LockType) null, txn0, false, (MemoryBudget) null, 1);
      Set set0 = lock0.release(txn0, (MemoryBudget) null, (-2120));
      assertEquals(0, set0.size());
  }

  @Test
  public void test26()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      Txn txn0 = new Txn();
      Set set0 = lock0.release(txn0, (MemoryBudget) null, 1);
      assertNull(set0);
  }

  @Test
  public void test27()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.WRITE;
      lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 1136);
      Locker[] lockerArray0 = new Locker[0];
      LockType lockType1 = lock0.transferMultiple((Locker) null, lockerArray0, (MemoryBudget) null, 4475);
      assertNull(lockType1);
  }

  @Test
  public void test29()  throws Throwable  {
      Lock lock0 = new Lock();
      Set set0 = lock0.getOwnersClone();
      assertEquals(0, set0.size());
  }

  @Test
  public void test30()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.flushWaiter((Locker) null, (MemoryBudget) null, 0);
  }

  @Test
  public void test31()  throws Throwable  {
      Lock lock0 = new Lock();
      List list0 = lock0.getWaitersListClone();
      assertEquals(0, list0.size());
  }

  @Test
  public void test32()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook767((MemoryBudget) null, 0);
  }

  @Test
  public void test33()  throws Throwable  {
      Lock lock0 = new Lock();
      Txn txn0 = new Txn();
      Locker[] lockerArray0 = new Locker[1];
      LockType lockType0 = lock0.transferMultiple(txn0, lockerArray0, (MemoryBudget) null, (-1890));
      assertNull(lockType0);
  }

  @Test
  public void test34()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.READ;
      LockGrantType lockGrantType0 = lock0.lock(lockType0, (Locker) null, true, (MemoryBudget) null, 0);
      assertEquals("NEW", lockGrantType0.toString());
      
      Set set0 = lock0.getOwnersClone();
      assertEquals(1, set0.size());
  }

  @Test
  public void test35()  throws Throwable  {
      Long long0 = new Long((-1441L));
      Lock lock0 = new Lock(long0);
      lock0.hook763((MemoryBudget) null, 1);
  }

  @Test
  public void test36()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook760((MemoryBudget) null, 860);
  }

  @Test
  public void test37()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook762((MemoryBudget) null, 0);
  }

  @Test
  public void test38()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook761((MemoryBudget) null, 26);
  }

  @Test
  public void test39()  throws Throwable  {
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RESTART;
      LockInfo lockInfo0 = new LockInfo((Locker) null, lockType0);
      lock0.hook766((MemoryBudget) null, 0, lockInfo0);
      assertFalse(lockInfo0.getDeadlockStackTrace());
  }

  @Test
  public void test40()  throws Throwable  {
      Lock lock0 = new Lock();
      lock0.hook765((MemoryBudget) null, (-968), false);
  }

  @Test
  public void test41()  throws Throwable  {
      Lock lock0 = new Lock();
      Long long0 = lock0.getNodeId();
      assertNull(long0);
  }
}
