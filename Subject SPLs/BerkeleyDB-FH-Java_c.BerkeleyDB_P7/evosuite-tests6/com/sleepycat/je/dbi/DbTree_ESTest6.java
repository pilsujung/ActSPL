/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 00:31:34 KST 2017
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.DatabaseNotFoundException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.DbTree;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;
import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class DbTree_ESTest6 extends DbTree_ESTest_scaffolding6 {

  @Test
  public void test00()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = "";
      // Undeclared exception!
      try { 
        Charset.forName(string0);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.logEntryIsTransactional();
      Txn txn0 = new Txn();
      try { 
        dbTree0.dbRename(txn0, " database ", (String) null);
        fail("Expecting exception: DatabaseNotFoundException");
      
      } catch(DatabaseNotFoundException e) {
         //
         // Attempted to rename non-existent database  database 
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.rebuildINListMapDb();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      byte[] byteArray0 = new byte[2];
      DatabaseId databaseId0 = new DatabaseId((int) byteArray0[1]);
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, (long) byteArray0[0]);
      //  // Unstable assertion: assertEquals(1036L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test12()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      dbTree0.getDbName(databaseId0);
      // Undeclared exception!
      try { 
        dbTree0.deleteMapLN(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      long long0 = dbTree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getHighestLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree$RootLevel", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("z*R]{N(7wx984-}O|");
      // Undeclared exception!
      try { 
        dbTree0.readFromLog(byteBuffer0, (byte)3);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("~A~0LQ-[p:lo0");
      // Undeclared exception!
      try { 
        dbTree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbName((DatabaseId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId(56);
      HashMap<DbTree, Object> hashMap0 = new HashMap<DbTree, Object>();
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, (-1201L), (Map) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 9223372036854775807L, false, (String) null);
      //  // Unstable assertion: assertEquals(856L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test24()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, (long) 29, false, ",TA");
      //  // Unstable assertion: assertEquals(844L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test25()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.isReservedDbName("ZG5\"uL+GiAov3-");
      assertFalse(boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeNameMap", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeIdMap", string0);
  }

  @Test
  public void test29()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      HashMap<DbTree, Object> hashMap0 = new HashMap<DbTree, Object>();
      dbTree0.getDb(databaseId0, 0L, (Map) hashMap0);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
  }

  @Test
  public void test30()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dbRename((Locker) null, "<&m*JaI$z&j54", " fileLength=0x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.CursorImpl", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.deleteMapLN((DatabaseId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        dbTree0.modifyDbRoot(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = dbTree0.toString();
      assertEquals("<dbTree lastDbId =\"0\">\n <database id=\"0\"/>\n <database id=\"0\"/>\n</dbtree>", string0);
  }

  @Test
  public void test34()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0);
      //  // Unstable assertion: assertEquals(437L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test35()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dumpString((-4192));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4192
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test36()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLastDbId();
      assertEquals(0, int0);
  }

  @Test
  public void test37()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLogSize();
      assertEquals(48, int0);
      
      String string0 = dbTree0.dumpString(int0);
      assertEquals("                                                <dbTree lastDbId =\"0\">\n                                                 <database id=\"0\"/>\n                                                 <database id=\"0\"/>\n</dbtree>", string0);
  }

  @Test
  public void test39()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.setLastDbId((-26));
      assertEquals(-26, dbTree0.getLastDbId());
  }

  @Test
  public void test41()  throws Throwable  {
      DbTree dbTree0 = null;
      try {
        dbTree0 = new DbTree((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test42()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.setEnvironmentImpl((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test43()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.postLogWork((-14L));
      assertTrue(dbTree0.marshallOutsideWriteLatch());
  }

  @Test
  public void test50()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
  }

  @Test
  public void test51()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 181L);
      //  // Unstable assertion: assertEquals(79L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test53()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.dump();
      assertEquals(0, dbTree0.getLastDbId());
  }

  @Test
  public void test54()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      LogEntryType logEntryType0 = dbTree0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test55()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      StringWriter stringWriter0 = new StringWriter(1384);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dbTree0.dumpLog(stringBuffer0, true);
      assertEquals(258, stringBuffer0.length());
      assertEquals("<dbtree lastId = \"0\"><idDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></idDb><nameDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></nameDb></dbtree>", stringWriter0.toString());
  }

  @Test
  public void test57()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  
}
