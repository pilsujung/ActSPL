/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:31:07 KST 2017
 */

package com.sleepycat.je.txn;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.LN;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LockResult_ESTest6 extends LockResult_ESTest_scaffolding6 {

  @Test
  public void test0()  throws Throwable  {
      LockResult lockResult0 = new LockResult((LockGrantType) null, (WriteLockInfo) null);
      LockGrantType lockGrantType0 = lockResult0.getLockGrant();
      assertNull(lockGrantType0);
  }

  @Test
  public void test1()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      DupCountLN dupCountLN0 = new DupCountLN();
      lockResult0.setLN(dupCountLN0);
      DupCountLN dupCountLN1 = (DupCountLN)lockResult0.getLN();
      assertTrue(dupCountLN1.marshallOutsideWriteLatch());
  }

  @Test
  public void test2()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      lockResult0.setLN(lN0);
      LN lN1 = lockResult0.getLN();
      assertTrue(lN1.marshallOutsideWriteLatch());
  }

  @Test
  public void test3()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.EXISTING;
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn(0L, true, false);
      assertEquals(0L, writeLockInfo0.getAbortLsn());
  }

  @Test
  public void test4()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.NEW;
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-1L), true, true);
      assertEquals((-1L), writeLockInfo0.getAbortLsn());
  }

  @Test
  public void test5()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.WAIT_NEW;
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-2395L), false, true);
      lockResult0.setAbortLsn(1L, false);
      assertFalse(writeLockInfo0.getAbortKnownDeleted());
      assertEquals((-2395L), writeLockInfo0.getAbortLsn());
  }

  @Test
  public void test6()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      lockResult0.setAbortLsn((-1204L), false, true);
  }

  @Test
  public void test7()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      LockGrantType lockGrantType1 = lockResult0.getLockGrant();
      assertSame(lockGrantType1, lockGrantType0);
  }

  @Test
  public void test8()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      DupCountLN dupCountLN0 = (DupCountLN)lockResult0.getLN();
      assertNull(dupCountLN0);
  }
}
