/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 00:50:21 KST 2017
 */

package com.sleepycat.je.latch;

import static org.junit.Assert.assertEquals;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LatchStats_ESTest6 extends LatchStats_ESTest_scaffolding6 {

  @Test
  public void test0()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      assertEquals(0, latchStats0.nAcquiresWithContention);
      
      latchStats0.nAcquiresWithContention = (-1349);
      String string0 = latchStats0.toString();
      assertEquals("nAcquiresNoWaiters=0\nnAcquiresSelfOwned=0\nnAcquiresUpgrade=0\nnAcquiresWithContention=-1349\nnAcquiresNoWaitSuccessful=0\nnAcquiresNoWaitUnSuccessful=0\nnAcquiresSharedSuccessful=0\n", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      assertEquals(0, latchStats0.nAcquiresSelfOwned);
      
      latchStats0.nAcquiresSelfOwned = 2320;
      String string0 = latchStats0.toString();
      assertEquals("nAcquiresNoWaiters=0\nnAcquiresSelfOwned=2320\nnAcquiresUpgrade=0\nnAcquiresWithContention=0\nnAcquiresNoWaitSuccessful=0\nnAcquiresNoWaitUnSuccessful=0\nnAcquiresSharedSuccessful=0\n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      assertEquals(0, latchStats0.nAcquiresNoWaiters);
      
      latchStats0.nAcquiresNoWaiters = (-2256);
      String string0 = latchStats0.toString();
      assertEquals("nAcquiresNoWaiters=-2256\nnAcquiresSelfOwned=0\nnAcquiresUpgrade=0\nnAcquiresWithContention=0\nnAcquiresNoWaitSuccessful=0\nnAcquiresNoWaitUnSuccessful=0\nnAcquiresSharedSuccessful=0\n", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      latchStats0.nAcquireNoWaitUnsuccessful = 1929;
      String string0 = latchStats0.toString();
      assertEquals(0, latchStats0.nReleases);
      assertEquals("nAcquiresNoWaiters=0\nnAcquiresSelfOwned=0\nnAcquiresUpgrade=0\nnAcquiresWithContention=0\nnAcquiresNoWaitSuccessful=0\nnAcquiresNoWaitUnSuccessful=1929\nnAcquiresSharedSuccessful=0\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      assertEquals(0, latchStats0.nAcquireSharedSuccessful);
      
      latchStats0.nAcquireSharedSuccessful = (-1);
      String string0 = latchStats0.toString();
      assertEquals("nAcquiresNoWaiters=0\nnAcquiresSelfOwned=0\nnAcquiresUpgrade=0\nnAcquiresWithContention=0\nnAcquiresNoWaitSuccessful=0\nnAcquiresNoWaitUnSuccessful=0\nnAcquiresSharedSuccessful=-1\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      LatchStats latchStats0 = new LatchStats();
      LatchStats latchStats1 = (LatchStats)latchStats0.clone();
      assertEquals(0, latchStats1.nAcquireNoWaitUnsuccessful);
      assertEquals(0, latchStats1.nReleases);
      assertEquals(0, latchStats1.nAcquiresWithContention);
      assertEquals(0, latchStats1.nAcquiresNoWaiters);
      assertEquals(0, latchStats1.nAcquireSharedSuccessful);
      assertEquals(0, latchStats1.nAcquiresSelfOwned);
      assertEquals(0, latchStats1.nAcquiresUpgrade);
      assertEquals(0, latchStats1.nAcquireNoWaitSuccessful);
  }
}
