/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 17:04:32 KST 2018
 */

package cz.cacek.ebook;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.fail;

import java.io.EOFException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest4 extends Page_ESTest_scaffolding4 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = new Page("U@");
      page0.readNext();
      page0.readNext();
      char char0 = page0.readPrev();
      assertEquals(1, page0.getPosition());
      assertEquals('@', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = new Page("6");
      char char0 = page0.readPrev();
      assertEquals((-1), page0.getPosition());
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = new Page("1");
      char char0 = page0.readNext();
      assertEquals(1, page0.getPosition());
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = new Page("%");
      char char0 = page0.readCurr();
      assertEquals('%', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = new Page("3");
      char char0 = page0.readCurr();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = new Page("Ua");
      page0.readNext();
      char char0 = page0.readCurr();
      assertEquals(1, page0.getPosition());
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = new Page("U");
      assertEquals(0, page0.getPosition());
      
      page0.readNext();
      int int0 = page0.getPosition();
      assertEquals(1, int0);
  }



  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = new Page("");
      page0.size = 2;
      page0.setPercPosition(100);
      try { 
        page0.readPrev();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("cz.cacek.ebook.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = new Page("");
      page0.size = 1;
      try { 
        page0.readNext();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot roll next buffer
         //
         verifyException("cz.cacek.ebook.Page", e);
      }
  }



  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Page page0 = new Page("");
      page0.size = 2;
      page0.setPosition(1);
      try { 
        page0.readCurr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("cz.cacek.ebook.Page", e);
      }
  }









  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Page page0 = new Page("G");
      page0.readPrev();
      try { 
        page0.readPrev();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cz.cacek.ebook.Page", e);
      }
  }




}
