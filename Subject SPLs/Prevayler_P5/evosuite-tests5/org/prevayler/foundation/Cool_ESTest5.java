/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 06 20:18:14 KST 2017
 */

package org.prevayler.foundation;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class Cool_ESTest5 extends Cool_ESTest_scaffolding5 {

  @Test
  public void test0()  throws Throwable  {
      Exception exception0 = new Exception((Throwable) null);
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "snapshot", 0);
      // Undeclared exception!
      try { 
        exception0.addSuppressed((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot suppress a null exception.
         //
         assertThrownBy("java.lang.Throwable", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Exception exception0 = new Exception((Throwable) null);
      // Undeclared exception!
      try { 
        exception0.addSuppressed((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot suppress a null exception.
         //
         assertThrownBy("java.lang.Throwable", e);
      }
  }


  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cool.sleep((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         assertThrownBy("java.lang.Thread", e);
      }
  }




  @Test
  public void test7()  throws Throwable  {
      Exception exception0 = new Exception("");
      // Undeclared exception!
      try { 
        Cool.unexpected(exception0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected Exception was thrown.
         //
         assertThrownBy("org.prevayler.foundation.Cool", e);
      }
  }

}
