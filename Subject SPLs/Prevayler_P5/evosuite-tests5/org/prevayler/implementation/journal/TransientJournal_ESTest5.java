/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 06 23:00:49 KST 2017
 */

package org.prevayler.implementation.journal;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.IOException;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.prevayler.foundation.Turn;
import org.prevayler.implementation.Capsule;
import org.prevayler.implementation.TransactionGuide;
import org.prevayler.implementation.TransactionTimestamp;
import org.prevayler.implementation.publishing.TransactionSubscriber;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class TransientJournal_ESTest5 extends TransientJournal_ESTest_scaffolding5 {


  @Test
  public void test01()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      transientJournal0.update((TransactionSubscriber) null, 1783L);
      long long0 = transientJournal0.nextTransaction();
      assertEquals(1783L, long0);
  }


  @Test
  public void test03()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      transientJournal0.update((TransactionSubscriber) null, 1774L);
      // Undeclared exception!
      try { 
        transientJournal0.append((TransactionGuide) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.journal.TransientJournal", e);
      }
  }



  @Test
  public void test06()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      transientJournal0.update((TransactionSubscriber) null, 1783L);
      transientJournal0.update((TransactionSubscriber) null, 1783L);
  }

  @Test
  public void test07()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      transientJournal0.update((TransactionSubscriber) null, 2652L);
      try { 
        transientJournal0.update((TransactionSubscriber) null, 0L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to recover transaction 0. The oldest recoverable transaction is 2652.
         //
         assertThrownBy("org.prevayler.implementation.journal.TransientJournal", e);
      }
  }


  @Test
  public void test09()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      transientJournal0.update((TransactionSubscriber) null, 1783L);
      Date date0 = new Date(1783L);
      TransactionTimestamp transactionTimestamp0 = new TransactionTimestamp((Capsule) null, (-3260L), date0);
      Turn turn0 = Turn.first();
      TransactionGuide transactionGuide0 = new TransactionGuide(transactionTimestamp0, turn0);
      // Undeclared exception!
      try { 
        transientJournal0.append(transactionGuide0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempted to process -3260 when ready for 1783
         //
         assertThrownBy("org.prevayler.implementation.TransactionGuide", e);
      }
  }

}
