/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 22:59:28 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class TupleInput_ESTest6 extends TupleInput_ESTest_scaffolding6 {

  @Test
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      long long0 = tupleInput0.readUnsignedInt();
      assertEquals(436207616L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-10);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(246, int0);
  }

  @Test
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      float float0 = tupleInput0.readFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)24;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      float float0 = tupleInput0.readFloat();
      assertEquals(3.4E-44F, float0, 0.01F);
  }

  @Test
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-15);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      float float0 = tupleInput0.readFloat();
      assertEquals((-6.338253E29F), float0, 0.01F);
  }

  @Test
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-51);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals((-8.22752278660603E62), double0, 0.01D);
  }

  @Test
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)49;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char char0 = tupleInput0.readChar();
      assertEquals('1', char0);
  }

  @Test
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char char0 = tupleInput0.readChar();
      assertEquals('\u0100', char0);
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-91);
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)16);
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)37, byte0);
  }

  @Test
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte)8;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readUnsignedShort();
      tupleInput0.readShort();
      char[] charArray0 = new char[1];
      tupleInput0.readBytes(charArray0);
      assertEquals(2, tupleInput0.available());
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)55;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readBytes((int) (byte)55);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[6] = (byte)64;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(8.0948E-320, double0, 0.01D);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[1] = (byte) (-95);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(1.2104401790279176E-305, double0, 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[7] = (byte) (-95);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(7.95E-322, double0, 0.01D);
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[5] = (byte) (-61);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(6.313922E-317, double0, 0.01D);
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[4] = (byte)48;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(3.97874211E-315, double0, 0.01D);
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[3] = (byte)1;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(2.121995791E-314, double0, 0.01D);
  }

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[2] = (byte)6;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(3.2593855349227E-311, double0, 0.01D);
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeUnsignedShort((byte)15);
      TupleOutput tupleOutput2 = tupleOutput0.writeBytes("_");
      tupleOutput2.writeByte((byte)15);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      int int0 = tupleInput0.readInt();
      assertEquals((-2146476145), int0);
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      tupleOutput0.writeUnsignedShort((byte)15);
      TupleOutput tupleOutput1 = tupleOutput0.writeBytes("_");
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      long long0 = tupleInput0.readLong();
      assertEquals(9151314442816847872L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-25);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.read();
      int int0 = tupleInput0.readInt();
      assertEquals(1728053248, int0);
  }

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-112);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      short short0 = tupleInput0.readShort();
      assertEquals((short)4096, short0);
  }

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      tupleOutput0.writeUnsignedByte((-4865));
      tupleOutput0.write(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeUnsignedShort(56);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      tupleInput0.readString();
      assertEquals(1, tupleInput0.available());
  }

  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)16);
      tupleInput0.readByte();
      tupleInput0.readInt();
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 290, 690);
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-2268), (int) (byte)27);
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-110);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[4];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[8];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readString((-4816));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-5);
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)0);
      try { 
        tupleInput0.readString((int) (byte)26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString(2159);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, (int) (byte)37);
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-236), 3211);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-2920), 40);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-70), (int) (byte) (-19));
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 63);
      char[] charArray0 = new char[7];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars(2138824439);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars((int) (byte) (-75));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readChars(3278);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeInt((byte) (-1));
      char[] charArray0 = new char[1];
      tupleOutput0.writeDouble(0.0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.readChars(charArray0);
      tupleInput0.readUnsignedShort();
      tupleInput0.readUnsignedInt();
      tupleInput0.readInt();
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 219, 290);
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test45()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes(2128136948);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test46()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes((-2102));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-43), (int) (byte)0);
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-1562), (-1235));
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test49()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test50()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((TupleOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readChar();
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 1156, 1156);
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(0, int0);
  }

  @Test
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[0];
      tupleInput0.readString(charArray0);
      assertEquals(2, tupleInput0.available());
  }

  @Test
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[14];
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-2752), (int) (byte)82);
      char[] charArray0 = new char[7];
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      String string0 = tupleInput0.readChars(0);
      assertEquals("", string0);
  }

  @Test
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)9, 137);
      try { 
        tupleInput0.readChars((int) (byte)12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      String string0 = tupleInput0.readBytes(0);
      assertEquals("", string0);
  }

  @Test
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-1), 32);
      try { 
        tupleInput0.readBytes((int) (byte)89);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[4];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeInt(206);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)0, byte0);
  }

  @Test
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)50;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      boolean boolean0 = tupleInput0.readBoolean();
      assertTrue(boolean0);
  }

  @Test
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readUnsignedShort();
      tupleInput0.readShort();
      tupleInput0.readUnsignedInt();
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      boolean boolean0 = tupleInput0.readBoolean();
      assertFalse(boolean0);
  }

  @Test
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      tupleOutput0.writeUnsignedByte((-4865));
      TupleOutput tupleOutput1 = tupleOutput0.writeString("");
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.readString();
      assertEquals(0, tupleInput0.available());
  }

  @Test
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeUnsignedByte((-4865));
      TupleOutput tupleOutput2 = tupleOutput1.writeByte((byte) (-38));
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeInt(206);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)120, 740);
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      long long0 = tupleInput0.readLong();
      assertEquals((-9223372036854775808L), long0);
  }

  @Test
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte) (-66));
      tupleInput0.readString((int) (byte)0);
      assertEquals(-66, tupleInput0.available());
  }
}
