/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 01:56:51 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.cleaner.FileSummary;
import com.sleepycat.je.cleaner.TrackedFileSummary;
import com.sleepycat.je.dbi.DatabaseImpl;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class FileSummaryLN_ESTest6 extends FileSummaryLN_ESTest_scaffolding6 {

  @Test
  public void test00()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      fileSummaryLN0.getFileNumber(byteArray0);
  }

  @Test
  public void test01()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummary0.totalSize = 16777216;
      fileSummaryLN0.getBaseSummary();
  }

  @Test
  public void test02()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      fileSummary0.totalINCount = (-3773);
  }

  @Test
  public void test03()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummary0.totalCount = (int) (byte)51;
      fileSummaryLN0.getBaseSummary();
  }

  @Test
  public void test04()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        fileSummaryLN0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        fileSummaryLN0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        fileSummaryLN0.readFromLog((ByteBuffer) null, (byte)21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      // Undeclared exception!
      try { 
        fileSummaryLN0.hasStringKey((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.FileSummaryLN", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        fileSummaryLN0.dumpString(1133, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1133
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.dumpString(2, false);
      assertEquals("    <node>0</node>\n\n", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      //  // Unstable assertion: assertEquals(159L, fileSummaryLN0.getLastId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.beginTag();
      assertEquals("<fileSummaryLN>", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.endTag();
      assertEquals("</fileSummaryLN>", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("</fileSummaryLN>");
      fileSummaryLN0.writeToLog(byteBuffer0);
      assertFalse(fileSummaryLN0.logEntryIsTransactional());
  }

  @Test
  public void test14()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      int int0 = fileSummaryLN0.getLogSize();
      assertEquals(9, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      fileSummaryLN0.dumpLogAdditional(stringBuffer0, true);
      //  // Unstable assertion: assertEquals(164, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(150L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test17()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      fileSummaryLN0.dumpLog(stringBuffer0, false);
      //  // Unstable assertion: assertEquals(205, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(140L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test18()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      fileSummaryLN0.dumpLogAdditional((StringBuffer) null, false);
      assertEquals("</fileSummaryLN>", fileSummaryLN0.endTag());
  }

  @Test
  public void test19()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.toString();
      assertEquals("<fileSummaryLN>\n  <node>0</node>\n</fileSummaryLN>\n", string0);
  }

  @Test
  public void test20()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      fileSummaryLN0.postFetchInit((DatabaseImpl) null, 830L);
      assertFalse(fileSummaryLN0.logEntryIsTransactional());
  }

  @Test
  public void test22()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = FileSummaryLN.makeFullKey(0L, 0);
      long long0 = fileSummaryLN0.getFileNumber(byteArray0);
      //  // Unstable assertion: assertEquals(62L, fileSummaryLN0.getNodeId());
      //  // Unstable assertion: assertEquals(0L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("\" lnKey=\"");
      fileSummaryLN0.readFromLog(byteBuffer0, (byte)4);
      byte[] byteArray0 = new byte[17];
      // Undeclared exception!
      try { 
        fileSummaryLN0.getFileNumber(byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      //  // Unstable assertion: assertEquals(30L, fileSummaryLN0.getLastId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = FileSummaryLN.makePartialKey((-3658L));
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte) (-74)}, byteArray0);
  }

  @Test
  public void test27()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getObsoleteOffsets();
      //  // Unstable assertion: assertEquals(21L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test28()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getLogType();
      //  // Unstable assertion: assertEquals(15L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test29()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      assertTrue(boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getTrackedSummary();
      //  // Unstable assertion: assertEquals(9L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test31()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.setTrackedSummary((TrackedFileSummary) null);
      //  // Unstable assertion: assertEquals(1L, fileSummaryLN0.getLastId());
  }
}
