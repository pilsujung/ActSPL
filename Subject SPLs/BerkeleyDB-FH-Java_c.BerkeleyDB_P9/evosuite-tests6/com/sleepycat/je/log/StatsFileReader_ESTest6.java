/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 01:20:58 KST 2017
 */

package com.sleepycat.je.log;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.File;
import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class StatsFileReader_ESTest6 extends StatsFileReader_ESTest_scaffolding6 {

  @Test
  public void test00()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) 0;
      statsFileReader_CheckpointCounter0.postStartMapLNCount = (-540);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test01()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) (-10);
      statsFileReader_CheckpointCounter0.postStartLNCount = (-1119);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test02()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.preStartMapLNCount = 46;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test03()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) 0;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test04()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte) (-94));
  }

  @Test
  public void test05()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      StatsFileReader statsFileReader0 = null;
      try {
        statsFileReader0 = new StatsFileReader((EnvironmentImpl) null, 1983, (-1L), (long) 1983, "o)c3KhrS8.9gPK.Mf", "o)c3KhrS8.9gPK.Mf", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileReader", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)3);
  }

  @Test
  public void test08()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (-4L);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test09()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test10()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      // Undeclared exception!
      try { 
        statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$CheckpointCounter", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)57);
  }

  @Test
  public void test12()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN;
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      // Undeclared exception!
      try { 
        statsFileReader_LogEntryTypeComparator0.compare(logEntryType0, statsFileReader_CheckpointCounter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non LogEntryType passed to LogEntryType.compare
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$LogEntryTypeComparator", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        statsFileReader_LogEntryTypeComparator0.compare(object0, statsFileReader_LogEntryTypeComparator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non LogEntryType passed to LogEntryType.compare
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$LogEntryTypeComparator", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      StatsFileReader.EntryInfo statsFileReader_EntryInfo0 = new StatsFileReader.EntryInfo();
  }

  @Test
  public void test15()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      int int0 = statsFileReader_LogEntryTypeComparator0.compare((Object) null, statsFileReader_CheckpointCounter0);
      assertEquals((-1), int0);
  }

  @Test
  public void test16()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      LogEntryType logEntryType0 = LogEntryType.LOG_MAPLN_TRANSACTIONAL;
      int int0 = statsFileReader_LogEntryTypeComparator0.compare(logEntryType0, (Object) null);
      assertEquals(1, int0);
  }
}
