/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 00:33:37 KST 2017
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class EnvironmentImpl_ESTest6 extends EnvironmentImpl_ESTest_scaffolding6 {

  @Test
  public void test03()  throws Throwable  {
      boolean boolean0 = EnvironmentImpl.getFairLatches();
      assertFalse(boolean0);
  }

  @Test
  public void test04()  throws Throwable  {
      boolean boolean0 = EnvironmentImpl.maybeForceYield();
      assertTrue(boolean0);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = EnvironmentImpl.getThreadLocalReferenceCount();
      assertEquals(0, int0);
  }

  @Test
  public void test08()  throws Throwable  {
      EnvironmentImpl.decThreadLocalReferenceCount();
  }

  @Test
  public void test09()  throws Throwable  {
      EnvironmentImpl.incThreadLocalReferenceCount();
  }

  @Test
  public void test10()  throws Throwable  {
      boolean boolean0 = EnvironmentImpl.getNoComparators();
      assertFalse(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      EnvironmentImpl.EnvironmentImpl_createDaemons environmentImpl_EnvironmentImpl_createDaemons0 = new EnvironmentImpl.EnvironmentImpl_createDaemons((EnvironmentImpl) null);
      // Undeclared exception!
      try { 
        environmentImpl_EnvironmentImpl_createDaemons0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.evictor.Evictor", e);
      }
  }

  
}
