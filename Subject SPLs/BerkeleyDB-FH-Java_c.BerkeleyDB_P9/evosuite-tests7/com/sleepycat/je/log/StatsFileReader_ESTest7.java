/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 20:45:39 KST 2017
 */

package com.sleepycat.je.log;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.util.AbstractMap;
import java.util.Comparator;
import java.util.Map;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.EnvironmentImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class StatsFileReader_ESTest7 extends StatsFileReader_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = 21L;
      statsFileReader_CheckpointCounter0.postStartMapLNCount = 23;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test01()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.preStartMapLNCount = 15;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test02()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) 0;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test03()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = 21L;
      statsFileReader_CheckpointCounter0.postStartLNTxnCount = 401;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test04()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)0);
  }

  @Test
  public void test05()  throws Throwable  {
      StatsFileReader statsFileReader0 = null;
      try {
        statsFileReader0 = new StatsFileReader((EnvironmentImpl) null, (-3832), 0L, 0L, "Nested transactions are not supported yet.", "Nested transactions are not supported yet.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileReader", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = 21L;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)3);
  }

  @Test
  public void test07()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)3);
  }

  @Test
  public void test08()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (-3L);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test09()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test10()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)34);
  }

  @Test
  public void test11()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      // Undeclared exception!
      try { 
        statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$CheckpointCounter", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_DUPCOUNTLN;
      AbstractMap.SimpleEntry<LogEntryType, LogEntryType> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<LogEntryType, LogEntryType>(logEntryType0, logEntryType0);
      AbstractMap.SimpleEntry<LogEntryType, LogEntryType> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<LogEntryType, LogEntryType>((Map.Entry<? extends LogEntryType, ? extends LogEntryType>) abstractMap_SimpleEntry0);
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      // Undeclared exception!
      try { 
        statsFileReader_LogEntryTypeComparator0.compare(logEntryType0, abstractMap_SimpleEntry1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non LogEntryType passed to LogEntryType.compare
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$LogEntryTypeComparator", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      int int0 = statsFileReader_LogEntryTypeComparator0.compare(statsFileReader_LogEntryTypeComparator0, (Object) null);
      assertEquals(1, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      Comparator<Map.Entry<Object, Integer>> comparator0 = Map.Entry.comparingByValue();
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      // Undeclared exception!
      try { 
        statsFileReader_LogEntryTypeComparator0.compare(statsFileReader_CheckpointCounter0.postStartLNTxnCount, comparator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non LogEntryType passed to LogEntryType.compare
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$LogEntryTypeComparator", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      StatsFileReader.EntryInfo statsFileReader_EntryInfo0 = new StatsFileReader.EntryInfo();
  }

  @Test
  public void test16()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test17()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      int int0 = statsFileReader_LogEntryTypeComparator0.compare((Object) null, statsFileReader_LogEntryTypeComparator0);
      assertEquals((-1), int0);
  }
}
