/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 19:49:24 KST 2017
 */

package com.sleepycat.je.cleaner;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class OffsetList_ESTest7 extends OffsetList_ESTest_scaffolding7 {

  @Test
  public void test0()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add(1615L, false);
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add(1615L);
      offsetList0.merge(offsetList0);
      OffsetList.Segment offsetList_Segment2 = new OffsetList.Segment();
      offsetList_Segment2.get(1);
      offsetList0.toArray();
      offsetList_Segment1.size();
  }

  @Test
  public void test1()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      OffsetList offsetList1 = new OffsetList();
      offsetList0.merge(offsetList1);
      offsetList1.add((-2786L), true);
      offsetList0.merge(offsetList1);
      // Undeclared exception!
      try { 
        offsetList0.merge((OffsetList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add(3660L, true);
      offsetList0.contains(3660L);
  }

  @Test
  public void test3()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.contains(3682L);
  }

  @Test
  public void test4()  throws Throwable  {
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      offsetList_Segment0.next();
      offsetList_Segment0.setNext((OffsetList.Segment) null);
      offsetList_Segment0.next();
  }

  @Test
  public void test5()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.toArray();
  }

  @Test
  public void test6()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add(0L, true);
      offsetList0.merge(offsetList0);
      offsetList0.size();
      offsetList0.add(101, false);
      offsetList0.add(0L, false);
      offsetList0.add(498L, true);
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      long long0 = (-70L);
      OffsetList.Segment offsetList_Segment1 = new OffsetList.Segment();
      offsetList0.add((-70L), true);
      offsetList0.merge(offsetList0);
      offsetList_Segment0.add(0L);
      offsetList_Segment0.add((-70L));
      offsetList0.add(498L, false);
      offsetList_Segment0.add(0L);
      offsetList0.add(0L, false);
      // Undeclared exception!
      try { 
        offsetList0.merge(offsetList0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test8()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      boolean boolean0 = offsetList0.add((-3862L), true);
      assertEquals(1, offsetList0.size());
      assertFalse(boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      OffsetList offsetList1 = new OffsetList();
      offsetList0.merge(offsetList1);
      offsetList0.merge(offsetList1);
      OffsetList offsetList2 = new OffsetList();
      offsetList2.merge(offsetList1);
      boolean boolean0 = offsetList0.merge(offsetList2);
      assertTrue(boolean0);
      
      int int0 = offsetList0.size();
      assertEquals(0, int0);
      
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add(0);
      offsetList_Segment1.setNext(offsetList_Segment0);
      long long0 = offsetList_Segment1.get(0);
      assertSame(offsetList_Segment1, offsetList_Segment0);
      assertEquals(0L, long0);
  }
}
