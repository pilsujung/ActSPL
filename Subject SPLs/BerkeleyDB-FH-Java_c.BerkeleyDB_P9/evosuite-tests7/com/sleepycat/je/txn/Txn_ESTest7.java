/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:57:03 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.lang.reflect.Method;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;

import javax.transaction.xa.Xid;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.LockStats;
import com.sleepycat.je.RunRecoveryException;
import com.sleepycat.je.TransactionConfig;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogUtils;
import com.sleepycat.je.log.entry.LNLogEntry;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.TreeLocation;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class Txn_ESTest7 extends Txn_ESTest_scaffolding7 {

  @Test
  public void test02()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = txn0.getTxnLocker();
      txn1.setSuspended(true);
      assertTrue(txn1.isSuspended());
  }

  @Test
  public void test03()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      txn0.getTxnLocker();
      assertTrue(txn0.getOnlyAbortable());
  }

  @Test
  public void test04()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = txn0.getTxnLocker();
      txn1.addLogInfo(0L);
      assertEquals(16, txn1.getLogSize());
  }

  @Test
  public void test05()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[5];
      txn0.setSuspended(true);
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(3, byteArray0, byteArray0);
      try { 
        txn0.commit((Xid) logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.readUncommittedDefault = true;
      try { 
        txn0.commit();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(true);
      txn0.setOnlyAbortable();
      assertTrue(txn0.getOnlyAbortable());
  }

  @Test
  public void test08()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.defaultNoWait = true;
      boolean boolean0 = txn0.isReadCommittedIsolation();
      assertFalse(boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo((-2487L));
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test11()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setLockTimeout(1130L);
      byte[] byteArray0 = new byte[5];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(3, byteArray0, byteArray0);
      try { 
        txn0.commit((Xid) logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[1];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl((-6116), byteArray0, byteArray0);
      txn0.setLockTimeout(130L);
      // Undeclared exception!
      try { 
        txn0.prepare(logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.WRITE;
      txn0.setLockTimeout(3964L);
      // Undeclared exception!
      try { 
        txn0.nonBlockingLock(3, lockType0, (DatabaseImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setLockTimeout((-1L));
      LockType lockType0 = LockType.WRITE;
      // Undeclared exception!
      try { 
        txn0.lockInternal((-2822L), lockType0, false, (DatabaseImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      boolean boolean0 = txn0.isSuspended();
      assertTrue(txn0.getOnlyAbortable());
      assertFalse(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(true);
      txn0.setSuspended(true);
      assertTrue(txn0.isSuspended());
  }

  @Test
  public void test17()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      txn0.setPrepared(false);
      assertTrue(txn0.getOnlyAbortable());
  }

  @Test
  public void test18()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[4];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(3, byteArray0, byteArray0);
      try { 
        txn0.commit((Xid) logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Txn txn0 = new Txn();
      String string0 = "";
      // Undeclared exception!
      try { 
        Charset.forName(string0);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      Txn txn0 = new Txn();
      EnvironmentImpl environmentImpl0 = null;
      DummyLockManager dummyLockManager0 = null;
      try {
        dummyLockManager0 = new DummyLockManager(environmentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.LockManager", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[4];
      txn0.hook810(byteArray0[3]);
      assertFalse(txn0.isHandleLockTransferrable());
  }

  @Test
  public void test25()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.checkState(false);
      assertEquals(0L, txn0.getTransactionId());
  }

  @Test
  public void test26()  throws Throwable  {
      Txn txn0 = new Txn();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      txn0.dumpLog(stringBuffer0, false);
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("<txn id=\"0__Txn\"><DbLsn val=\"0xffffffff/0xffffffff\"/></txn>", stringWriter0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        txn0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test28()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.unRegisterCursor((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.registerCursor((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("!Xt()m* {uD/?Hg");
      // Undeclared exception!
      try { 
        txn0.readFromLog(byteBuffer0, (byte)4);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      Txn txn0 = new Txn();
      try { 
        txn0.commit((byte)7);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.operationEnd(false);
      assertTrue(txn0.logEntryIsTransactional());
  }

  @Test
  public void test34()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_PROMOTION;
      // Undeclared exception!
      try { 
        txn0.addLock(long0, lock0, lockType0, lockGrantType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn$Txn_addLock", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      // Undeclared exception!
      try { 
        txn0.addLock(long0, lock0, lockType0, lockGrantType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn$Txn_addLock", e);
      }
  }

  @Test
  public void test36()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_RESTART;
      txn0.addLock((Long) null, lock0, lockType0, lockGrantType0);
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test37()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      byte[] byteArray0 = new byte[4];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(3, byteArray0, byteArray0);
      // Undeclared exception!
      try { 
        txn0.abort((Xid) logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test38()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.getOnlyAbortable();
      assertFalse(boolean0);
  }

  @Test
  public void test39()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.setHandleLockOwner(true, (Database) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setHandleLockOwner(false, (Database) null, false);
      assertTrue(txn0.logEntryIsTransactional());
  }

  @Test
  public void test42()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_RESTART;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      long long1 = txn0.getAbortLsn(964L);
      assertEquals((-1L), long1);
  }

  @Test
  public void test43()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getAbortLsn(1L);
      assertEquals((-1L), long0);
  }

  @Test
  public void test44()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_RESTART;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      boolean boolean0 = txn0.createdNode(3);
      assertFalse(boolean0);
  }

  @Test
  public void test45()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      Lock lock0 = new Lock(long0);
      LockType lockType0 = LockType.WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_RESTART;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      boolean boolean0 = txn0.createdNode(3964L);
      assertFalse(boolean0);
  }

  @Test
  public void test46()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.createdNode(3964L);
      assertFalse(boolean0);
  }

  @Test
  public void test47()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.removeLock(3, (Lock) null);
      assertEquals(0L, txn0.getId());
  }

  @Test
  public void test48()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((-1L));
      LockType lockType0 = LockType.RANGE_READ;
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      Txn.Txn_addLock txn_Txn_addLock0 = new Txn.Txn_addLock(txn0, long0, (Lock) null, lockType0, lockGrantType0);
      txn_Txn_addLock0.execute();
  }

  @Test
  public void test49()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo(0L);
      txn0.addLogInfo((byte)79);
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test50()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[1];
      txn0.setPrepared(true);
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl((-6116), byteArray0, byteArray0);
      try { 
        txn0.prepare(logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // prepare() has already been called for Transaction 0.
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isSuspended();
      assertFalse(boolean0);
  }

  @Test
  public void test52()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      assertTrue(txn0.isSuspended());
      
      txn0.setSuspended(false);
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test53()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(true);
      txn0.setPrepared(true);
      assertFalse(txn0.isSuspended());
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test54()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(false);
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test57()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.releaseNonTxnLocks();
      assertFalse(txn0.isSuspended());
  }

  @Test
  public void test58()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook804();
      assertFalse(txn0.isReadUncommittedDefault());
  }

  @Test
  public void test59()  throws Throwable  {
      Txn txn0 = new Txn();
      TreeLocation treeLocation0 = new TreeLocation();
      Class<Method> class0 = Method.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      MapLN mapLN0 = new MapLN();
      try { 
        txn0.hook802(2780, treeLocation0, lNLogEntry0, mapLN0, (DatabaseImpl) null, 2780, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.LNLogEntry", e);
      }
  }

  @Test
  public void test60()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.readFromLog((ByteBuffer) null, (byte)13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test61()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isHandleLockTransferrable();
      assertFalse(boolean0);
  }

  @Test
  public void test62()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.generateId((TxnManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test63()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getLogSize();
      assertEquals(16, int0);
  }

  @Test
  public void test64()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test65()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getFirstActiveLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test66()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook812();
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test67()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook806();
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test68()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test69()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook814();
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test70()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook808();
      assertEquals(0L, txn0.getTxnTimeOut());
  }

  @Test
  public void test72()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = txn0.getTxnLocker();
      txn1.addLogInfo(3);
      assertEquals(16, txn1.getLogSize());
  }

  @Test
  public void test73()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.operationEnd();
      assertFalse(txn0.isSuspended());
  }

  @Test
  public void test74()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("U03/*o@IK!]/nfy&");
      txn0.writeToLog(byteBuffer0);
      assertEquals(0L, txn0.getTxnTimeOut());
  }

  @Test
  public void test75()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = (Txn)txn0.newNonTxnLocker();
      assertSame(txn0, txn1);
  }

  @Test
  public void test77()  throws Throwable  {
      TransactionConfig transactionConfig0 = TransactionConfig.DEFAULT;
      Txn txn0 = null;
      try {
        txn0 = new Txn((EnvironmentImpl) null, transactionConfig0, 127L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test78()  throws Throwable  {
      Txn txn0 = new Txn();
      assertFalse(txn0.getOnlyAbortable());
      
      txn0.setOnlyAbortable();
      boolean boolean0 = txn0.getOnlyAbortable();
      assertTrue(boolean0);
  }

  @Test
  public void test79()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook803();
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test80()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.logEntryIsTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test81()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getInMemorySize();
      assertEquals(0, int0);
  }

  @Test
  public void test82()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getLastLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test84()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook805();
      assertEquals(0L, txn0.getLockTimeout());
  }

  @Test
  public void test85()  throws Throwable  {
      TransactionConfig transactionConfig0 = new TransactionConfig();
      Txn txn0 = null;
      try {
        txn0 = new Txn((EnvironmentImpl) null, transactionConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test86()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook813();
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test87()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 3);
      LockType lockType0 = LockType.RANGE_READ;
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      assertTrue(txn0.logEntryIsTransactional());
  }

  @Test
  public void test88()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook807();
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test89()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook809();
      assertTrue(txn0.logEntryIsTransactional());
  }

  @Test
  public void test90()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test91()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isSerializableIsolation();
      assertFalse(boolean0);
  }
}
