/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:59:33 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import javax.transaction.xa.Xid;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogUtils;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class TxnEnd_ESTest7 extends TxnEnd_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(0L, 0L);
      long long0 = txnCommit0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl((-1), byteArray0, byteArray0);
      TxnPrepare txnPrepare0 = new TxnPrepare((-2048L), (Xid) logUtils_XidImpl0);
      long long0 = txnPrepare0.getTransactionId();
      assertEquals((-2048L), long0);
  }

  @Test
  public void test02()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      long long0 = txnCommit0.getLastLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test03()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      long long0 = txnAbort0.getId();
      assertEquals(0L, long0);
  }

  @Test
  public void test04()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort((-381L), 3049L);
      long long0 = txnAbort0.getId();
      assertEquals((-381L), long0);
  }

  @Test
  public void test05()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort((-519L), 1951L);
      long long0 = txnAbort0.getLastLsn();
      assertEquals(1951L, long0);
      assertEquals((-519L), txnAbort0.getId());
  }

  @Test
  public void test06()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      String string0 = txnAbort0.getTagName();
      assertEquals("TxnAbort", string0);
  }

  @Test
  public void test07()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      LogEntryType logEntryType0 = txnCommit0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test08()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      txnAbort0.dumpLog(stringBuffer0, true);
      assertEquals(142, stringBuffer0.capacity());
      assertEquals("<TxnAbort id=\"0\" time=\"null\"><DbLsn val=\"0xffffffff/0xffffffff\"/></TxnAbort>", stringWriter0.toString());
  }

  @Test
  public void test09()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(255L, (-1640L));
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("3x][^vG,N:C!a&4O=&");
      // Undeclared exception!
      try { 
        txnAbort0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("<dirty val!\"");
      // Undeclared exception!
      try { 
        txnAbort0.writeToLog(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        txnAbort0.readFromLog(byteBuffer0, (byte)103);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit((long) 1, (long) 1);
      // Undeclared exception!
      try { 
        txnCommit0.readFromLog((ByteBuffer) null, (byte)51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      // Undeclared exception!
      try { 
        txnPrepare0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit((long) (byte)89, (long) (byte)77);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("<Xid formatId=\"2709\" gTxnId=\"\u001AM\u001AY\" bqual=\"\u001AMYYM\u001A\"/>");
      txnCommit0.writeToLog(byteBuffer0);
      assertEquals(89L, txnCommit0.getId());
  }

  @Test
  public void test15()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit((long) (byte)89, (long) (byte)77);
      boolean boolean0 = txnCommit0.marshallOutsideWriteLatch();
      assertEquals(89L, txnCommit0.getId());
      assertTrue(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(0L, 0L);
      long long0 = txnCommit0.getLastLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      txnCommit0.postLogWork(0L);
      assertEquals(0L, txnCommit0.getId());
  }

  @Test
  public void test18()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      int int0 = txnCommit0.getLogSize();
      assertEquals(24, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      boolean boolean0 = txnCommit0.logEntryIsTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(1215L, (-1L));
      long long0 = txnCommit0.getTransactionId();
      assertEquals(1215L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      // Undeclared exception!
      try { 
        txnCommit0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.TxnEnd", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(2709, byteArray0, byteArray0);
      TxnPrepare txnPrepare0 = new TxnPrepare((-1L), (Xid) logUtils_XidImpl0);
      boolean boolean0 = txnPrepare0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
      assertEquals((-1L), txnPrepare0.getId());
  }

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(24, byteArray0, byteArray0);
      TxnPrepare txnPrepare0 = new TxnPrepare(2332L, (Xid) logUtils_XidImpl0);
      long long0 = txnPrepare0.getId();
      assertEquals(2332L, long0);
  }

  @Test
  public void test24()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("\" lastEntryInPrevFileOffset=\"0x");
      txnCommit0.readFromLog(byteBuffer0, (byte)106);
      assertEquals(7945885156469645346L, txnCommit0.getId());
  }
}
