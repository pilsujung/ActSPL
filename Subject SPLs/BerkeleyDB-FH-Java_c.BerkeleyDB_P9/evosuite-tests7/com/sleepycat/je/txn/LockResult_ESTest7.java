/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:52:04 KST 2017
 */

package com.sleepycat.je.txn;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class LockResult_ESTest7 extends LockResult_ESTest_scaffolding7 {

  @Test
  public void test0()  throws Throwable  {
      LockResult lockResult0 = new LockResult((LockGrantType) null, (WriteLockInfo) null);
      LockGrantType lockGrantType0 = lockResult0.getLockGrant();
      assertNull(lockGrantType0);
  }

  @Test
  public void test1()  throws Throwable  {
      LockResult lockResult0 = new LockResult((LockGrantType) null, (WriteLockInfo) null);
      MapLN mapLN0 = new MapLN();
      lockResult0.setLN(mapLN0);
      MapLN mapLN1 = (MapLN)lockResult0.getLN();
      assertEquals(0L, mapLN1.getTransactionId());
  }

  @Test
  public void test2()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.WAIT_PROMOTION;
      WriteLockInfo writeLockInfo0 = WriteLockInfo.basicWriteLockInfo;
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-4370L), true);
  }

  @Test
  public void test3()  throws Throwable  {
      LockResult lockResult0 = new LockResult((LockGrantType) null, (WriteLockInfo) null);
      lockResult0.setAbortLsn(0L, false, true);
  }

  @Test
  public void test4()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.NEW;
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn(1629L, true, true);
      assertEquals(1629L, writeLockInfo0.getAbortLsn());
  }

  @Test
  public void test5()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      Lock lock0 = new Lock();
      WriteLockInfo writeLockInfo0 = new WriteLockInfo(lock0);
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-1L), true, true);
      assertFalse(writeLockInfo0.getAbortKnownDeleted());
  }

  @Test
  public void test6()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      Lock lock0 = new Lock();
      WriteLockInfo writeLockInfo0 = new WriteLockInfo(lock0);
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-1L), true);
      lockResult0.setAbortLsn(4499L, true);
      assertFalse(writeLockInfo0.getAbortKnownDeleted());
  }

  @Test
  public void test7()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      LockGrantType lockGrantType1 = lockResult0.getLockGrant();
      assertSame(lockGrantType0, lockGrantType1);
  }

  @Test
  public void test8()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.DENIED;
      Lock lock0 = new Lock();
      WriteLockInfo writeLockInfo0 = new WriteLockInfo(lock0);
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      LN lN0 = new LN();
      lockResult0.setLN(lN0);
      LN lN1 = lockResult0.getLN();
      assertTrue(lN1.isDeleted());
  }

  @Test
  public void test9()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.DENIED;
      Lock lock0 = new Lock();
      WriteLockInfo writeLockInfo0 = new WriteLockInfo(lock0);
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      LN lN0 = lockResult0.getLN();
      assertNull(lN0);
  }
}
