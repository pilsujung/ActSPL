/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:09:20 KST 2017
 */

package com.sleepycat.je.cleaner;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.nio.ByteBuffer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class PackedOffsets_ESTest9 extends PackedOffsets_ESTest_scaffolding9 {

  @Test
  public void test00()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[2];
      packedOffsets0.pack(longArray0);
      PackedOffsets.Iterator packedOffsets_Iterator0 = packedOffsets0.iterator();
      assertNotNull(packedOffsets_Iterator0);
  }

  @Test
  public void test01()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[2];
      packedOffsets0.pack(longArray0);
      int int0 = packedOffsets0.getLogSize();
      assertEquals(12, int0);
  }

  @Test
  public void test02()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[8];
      longArray0[2] = 3409L;
      packedOffsets0.pack(longArray0);
      String string0 = packedOffsets0.toString();
      assertEquals("<offsets size=\"8\">0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xd51 </offsets>", string0);
  }

  @Test
  public void test03()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[3];
      longArray0[0] = 1114L;
      longArray0[2] = 181L;
      packedOffsets0.pack(longArray0);
      assertArrayEquals(new long[] {0L, 181L, 1114L}, longArray0);
  }






  @Test
  public void test10()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[0];
      packedOffsets0.pack(longArray0);
      int int0 = packedOffsets0.getLogSize();
      assertEquals(8, int0);
  }



  @Test
  public void test13()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[2];
      packedOffsets0.pack(longArray0);
      long[] longArray1 = packedOffsets0.toArray();
      assertArrayEquals(new long[] {0L, 0L}, longArray1);
  }



}
