/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 20:09:38 KST 2017
 */

package com.sleepycat.je.dbi;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.PrintStream;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseNotFoundException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.VerifyConfig;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class DbTree_ESTest7 extends DbTree_ESTest_scaffolding7 {

  @Test
  public void test00()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 0L, false, "K)?~iJpgkf");
      databaseImpl0.setTransactional(true);
      //  // Unstable assertion: assertEquals(1135L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test01()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put(databaseId0, (Object) null);
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 1L, (Map) hashMap0);
      assertNull(databaseImpl0);
  }

  @Test
  public void test02()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = dbTree0.dumpString(0);
      assertEquals("<dbTree lastDbId =\"0\">\n <database id=\"0\"/>\n <database id=\"0\"/>\n</dbtree>", string0);
  }

  @Test
  public void test03()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      dbTree0.getDb(databaseId0, 1638L, (Map) hashMap0);
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 1L, (Map) hashMap0);
      //  // Unstable assertion: assertEquals(1, hashMap0.size());
      //  // Unstable assertion: assertEquals(981L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test04()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = "";
      // Undeclared exception!
      try { 
        dbTree0.getHighestLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree$RootLevel", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DbTree dbTree0 = null;
      try {
        dbTree0 = new DbTree((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      VerifyConfig verifyConfig0 = new VerifyConfig();
      // Undeclared exception!
      try { 
        dbTree0.verify(verifyConfig0, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.readFromLog((ByteBuffer) null, (byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbName((DatabaseId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put((Object) null, databaseId0);
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, 1L, (Map) hashMap0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId((-77));
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, (-949L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDb((DatabaseId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dumpString(533);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 533
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      // Undeclared exception!
      try { 
        dbTree0.createDb((Locker) null, (String) null, databaseConfig0, (Database) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDb((Locker) null, (String) null, (Database) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.CursorImpl", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.isReservedDbName("_jeIdMap");
      assertTrue(boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.isReservedDbName("(");
      assertFalse(boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId((-4031));
      // Undeclared exception!
      try { 
        dbTree0.getDbName(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeIdMap", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeNameMap", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, (-2110L), true, "r5Fs");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test28()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Integer integer0 = new Integer(415);
      hashMap0.put(databaseId0, integer0);
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, 1638L, (Map) hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.sleepycat.je.dbi.DatabaseImpl
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDb((Locker) null, (String) null, (Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.CursorImpl", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.deleteMapLN(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 0L, false, "K)?~iJpgkf");
      // Undeclared exception!
      try { 
        dbTree0.modifyDbRoot(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test34()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0);
      //  // Unstable assertion: assertEquals(439L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test35()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.toString();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbConfigManager", e);
      }
  }

  @Test
  public void test37()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLastDbId();
      assertEquals(0, int0);
  }

  @Test
  public void test38()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLogSize();
      assertEquals(48, int0);
  }

  @Test
  public void test40()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test42()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 1638L);
      //  // Unstable assertion: assertEquals(269L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test43()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.setLastDbId((-1567));
      int int0 = dbTree0.getLastDbId();
      assertEquals((-1567), int0);
  }

  @Test
  public void test44()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.dump();
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test45()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      LogEntryType logEntryType0 = dbTree0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test48()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dbTree0.dumpLog(stringBuffer0, false);
      assertEquals("<dbtree lastId = \"0\"><idDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></idDb><nameDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></nameDb></dbtree>", stringBuffer0.toString());
      assertEquals("<dbtree lastId = \"0\"><idDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></idDb><nameDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></nameDb></dbtree>", stringWriter0.toString());
  }

  @Test
  public void test50()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.rebuildINListMapDb();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test52()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      // Undeclared exception!
      try { 
        dbTree0.createDb((Locker) null, (String) null, databaseConfig0, (Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test53()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      long long0 = dbTree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test54()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("</database>");
      // Undeclared exception!
      try { 
        dbTree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test57()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.setEnvironmentImpl((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test58()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.postLogWork((-1L));
      assertEquals(0, dbTree0.getLastDbId());
  }

  @Test
  public void test60()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" database ");
      // Undeclared exception!
      try { 
        dbTree0.readFromLog(byteBuffer0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test62()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  
}
