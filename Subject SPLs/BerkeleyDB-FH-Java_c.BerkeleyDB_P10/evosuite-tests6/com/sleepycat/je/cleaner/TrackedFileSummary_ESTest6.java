/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 23:55:57 KST 2017
 */

package com.sleepycat.je.cleaner;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.cleaner.TrackedFileSummary;
import com.sleepycat.je.cleaner.UtilizationTracker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class TrackedFileSummary_ESTest6 extends TrackedFileSummary_ESTest_scaffolding6 {

  @Test
  public void test00()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, true);
      trackedFileSummary0.getFileNumber();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test01()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 21L, true);
      long long0 = trackedFileSummary0.getFileNumber();
      assertEquals(21L, long0);
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test02()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2732L), true);
      assertTrue(trackedFileSummary0.getAllowFlush());
      
      trackedFileSummary0.setAllowFlush(false);
      boolean boolean0 = trackedFileSummary0.getAllowFlush();
      assertFalse(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2731L), true);
      trackedFileSummary0.totalLNCount = 1;
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2731L), true);
      trackedFileSummary0.totalCount = (-5);
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.totalINSize = (-1);
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalINCount = 17;
      TrackedFileSummary.TrackedFileSummary_trackObsolete trackedFileSummary_TrackedFileSummary_trackObsolete0 = new TrackedFileSummary.TrackedFileSummary_trackObsolete(trackedFileSummary0, 948L);
      trackedFileSummary_TrackedFileSummary_trackObsolete0.hook171();
      // Undeclared exception!
      try { 
        trackedFileSummary_TrackedFileSummary_trackObsolete0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalLNSize = (-4458);
      TrackedFileSummary.TrackedFileSummary_trackObsolete trackedFileSummary_TrackedFileSummary_trackObsolete0 = new TrackedFileSummary.TrackedFileSummary_trackObsolete(trackedFileSummary0, 948L);
      trackedFileSummary_TrackedFileSummary_trackObsolete0.hook172();
      // Undeclared exception!
      try { 
        trackedFileSummary_TrackedFileSummary_trackObsolete0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.obsoleteLNCount = 1014;
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.totalSize = (-1881);
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2731L), true);
      trackedFileSummary0.obsoleteINCount = (-48);
      // Undeclared exception!
      try { 
        trackedFileSummary0.hook169();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2765L), true);
      trackedFileSummary0.totalLNCount = 979;
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2765L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test12()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), true);
      trackedFileSummary0.totalCount = (-2);
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test13()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.totalINSize = (-1);
      int int0 = trackedFileSummary0.getMemorySize();
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals(0, int0);
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test14()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), true);
      trackedFileSummary0.totalINCount = (-2248);
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test15()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), true);
      trackedFileSummary0.totalLNSize = 199;
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test16()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.obsoleteLNCount = 1014;
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test17()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      trackedFileSummary0.totalSize = (-1881);
      int int0 = trackedFileSummary0.getMemorySize();
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals(0, int0);
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
  }

  @Test
  public void test18()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2765L), true);
      trackedFileSummary0.obsoleteINCount = (-1520);
      int int0 = trackedFileSummary0.getMemorySize();
      assertEquals(0, int0);
      assertEquals((-2765L), trackedFileSummary0.getFileNumber());
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test19()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalLNCount = 1471;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test20()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalCount = 1107;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test21()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalINSize = 237;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test22()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, true);
      trackedFileSummary0.totalINCount = 1057;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test23()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalLNSize = 246;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test24()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.obsoleteLNCount = 775;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test25()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.totalSize = 136;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test26()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.obsoleteINCount = 131072;
      trackedFileSummary0.hook168();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test27()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, true);
      TrackedFileSummary trackedFileSummary1 = new TrackedFileSummary((UtilizationTracker) null, 0, false);
      trackedFileSummary0.addTrackedSummary(trackedFileSummary1);
      assertTrue(trackedFileSummary1.getAllowFlush());
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test28()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-11L), false);
      TrackedFileSummary.TrackedFileSummary_trackObsolete trackedFileSummary_TrackedFileSummary_trackObsolete0 = new TrackedFileSummary.TrackedFileSummary_trackObsolete(trackedFileSummary0, 0);
      trackedFileSummary_TrackedFileSummary_trackObsolete0.hook172();
      // Undeclared exception!
      try { 
        trackedFileSummary_TrackedFileSummary_trackObsolete0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2731L), true);
      // Undeclared exception!
      try { 
        trackedFileSummary0.addTrackedSummary((TrackedFileSummary) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.FileSummary", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      boolean boolean0 = trackedFileSummary0.containsObsoleteOffset(0);
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
      assertFalse(boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.getObsoleteOffsets();
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test32()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2765L), true);
      long long0 = trackedFileSummary0.getFileNumber();
      assertTrue(trackedFileSummary0.getAllowFlush());
      assertEquals((-2765L), long0);
  }

  @Test
  public void test33()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2744L), false);
      boolean boolean0 = trackedFileSummary0.getAllowFlush();
      assertEquals((-2744L), trackedFileSummary0.getFileNumber());
      assertTrue(boolean0);
  }

  @Test
  public void test34()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, (-2765L), true);
      // Undeclared exception!
      try { 
        trackedFileSummary0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, false);
      trackedFileSummary0.trackObsolete(0);
      assertTrue(trackedFileSummary0.getAllowFlush());
  }

  @Test
  public void test36()  throws Throwable  {
      TrackedFileSummary trackedFileSummary0 = new TrackedFileSummary((UtilizationTracker) null, 0L, true);
      TrackedFileSummary.TrackedFileSummary_trackObsolete trackedFileSummary_TrackedFileSummary_trackObsolete0 = new TrackedFileSummary.TrackedFileSummary_trackObsolete(trackedFileSummary0, 1057);
      // Undeclared exception!
      try { 
        trackedFileSummary_TrackedFileSummary_trackObsolete0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.TrackedFileSummary$TrackedFileSummary_trackObsolete", e);
      }
  }
}
