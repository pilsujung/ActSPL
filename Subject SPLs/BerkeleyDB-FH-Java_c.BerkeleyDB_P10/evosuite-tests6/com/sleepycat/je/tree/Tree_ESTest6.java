/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:15:20 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.cleaner.UtilizationTracker;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.txn.LockResult;
import com.sleepycat.je.utilint.TestHook;

import de.ovgu.cide.jakutil.ReturnObject;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true)
public class Tree_ESTest6 extends Tree_ESTest_scaffolding6 {

  @Test
  public void test002()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tree0.getParentINForChildIN(0L, false, true, byteArray0, byteArray0, false, true, (int) (byte)63, (List) linkedList0, false);
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test003()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = null;
      byte[] byteArray0 = new byte[5];
      DBIN dBIN0 = new DBIN();
      TreeLocation treeLocation0 = new TreeLocation();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        tree0.hook683(treeLocation0, (byte[]) null, byteArray0, fileSummaryLN0, false, false, false, false, false, true, dBIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.DBIN cannot be cast to com.sleepycat.je.tree.DIN
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test005()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      DIN dIN0 = new DIN();
      DupCountLN dupCountLN0 = new DupCountLN(1073741824);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        tree0.hook685(treeLocation0, (byte[]) null, dIN0, dupCountLN0, true, true, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test006()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook728();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test007()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = true;
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, byteArray0[0], boolean0);
      EnvironmentImpl environmentImpl0 = null;
      try {  
      environmentImpl0 = tree_Tree_searchSplitsAllowed0.env;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test008()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook702();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test009()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      DBIN dBIN0 = new DBIN();
      TreeLocation treeLocation0 = new TreeLocation();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test011()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test012()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.rebuildINList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test013()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.readFromLog(byteBuffer0, (byte)5);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test014()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook754((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test015()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook747((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test016()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook744((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test017()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook737((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test018()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook737(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test019()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook736((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test020()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook735((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test022()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook705(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test023()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook701(true, (IN) null);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test025()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        tree0.hook698((IN) null, byteArray0, 67108864L, false, 845, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test026()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook697((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test031()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook676((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test032()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook671((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test033()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook670((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test034()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.getPrevBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test036()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getNextBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test037()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.dumpString((byte) (-31));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -31
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test038()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test039()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        tree0.deleteDup(byteArray0, byteArray0, (UtilizationTracker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Tree tree0 = new Tree();
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      IN iN0 = tree0.search(byteArray0, tree_SearchType0, (-838L), (BINBoundary) null, true);
      assertNull(iN0);
  }

  @Test
  public void test042()  throws Throwable  {
      Tree tree0 = new Tree();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, false, 432, (List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getRootLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test045()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getRootIN(false);
      assertNull(iN0);
  }

  @Test
  public void test053()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook694((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test055()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook686(false, false, (byte[]) null, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test056()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        tree0.hook686(true, false, byteArray0, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test057()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook684(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test058()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      tree0.hook683(treeLocation0, (byte[]) null, (byte[]) null, fileSummaryLN0, false, false, true, false, false, false, fileSummaryLN0);
      assertEquals(0, treeLocation0.index);
  }

  @Test
  public void test059()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      NameLN nameLN0 = new NameLN();
      tree0.hook683(treeLocation0, (byte[]) null, (byte[]) null, nameLN0, true, true, false, false, false, true, (Node) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test061()  throws Throwable  {
      DIN dIN0 = new DIN();
      Tree tree0 = new Tree();
      try { 
        tree0.hook675(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test062()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      tree0.delete(byteArray0, (UtilizationTracker) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test064()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.validateINList((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test065()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      mapLN0.dumpLog(stringBuffer0, true);
      //  // Unstable assertion: assertEquals(128, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(208L, mapLN0.getLastId());
  }

  @Test
  public void test066()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("H");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      tree0.readFromLog(byteBuffer1, (byte) (-15));
      assertFalse(byteBuffer1.hasRemaining());
  }

  @Test
  public void test067()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("kvHkZyV[e");
      tree0.writeToLog(byteBuffer0);
      //  // Unstable assertion: assertEquals(201L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test068()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test069()  throws Throwable  {
      Tree tree0 = new Tree();
      int int0 = tree0.getLogSize();
      assertEquals(1, int0);
  }

  @Test
  public void test071()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[4];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      // Undeclared exception!
      try { 
        tree0.searchSubTree(dBIN0, byteArray0, tree_SearchType0, 0L, bINBoundary0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // searchSubTree passed key and left/right search
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test072()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      BINBoundary bINBoundary0 = new BINBoundary();
      IN iN0 = tree0.searchSubTree((IN) null, byteArray0, tree_SearchType0, (-3601L), bINBoundary0, true);
      assertNull(iN0);
  }

  @Test
  public void test073()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      MapLN mapLN0 = new MapLN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, (byte[]) null, (byte[]) null, mapLN0, false, false, false, false);
      //  // Unstable assertion: assertEquals(165L, mapLN0.getLastId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test074()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.getLastNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getLastNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test076()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.getFirstNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getFirstNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test077()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte)108, true);
      tree_Tree_searchSplitsAllowed0.hook721();
      tree_Tree_searchSplitsAllowed0.hook721();
  }

  @Test
  public void test078()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 0L, false);
      tree_Tree_searchSplitsAllowed0.hook719();
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // RootLatch already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5SharedLatchImpl", e);
      }
  }

  @Test
  public void test079()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (-197L), false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook718();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_searchSplitsAllowed", e);
      }
  }

  @Test
  public void test080()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[9];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook725();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test081()  throws Throwable  {
      Tree tree0 = new Tree();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, (byte[]) null);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook724();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test082()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[8];
      DupCountLN dupCountLN0 = new DupCountLN(0);
      // Undeclared exception!
      try { 
        tree0.insert(dupCountLN0, byteArray0, false, (CursorImpl) null, (LockResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test083()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook681((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test084()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.validateDelete((-317));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test085()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook731((TreeLocation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test086()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook705((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test087()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test088()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook740((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test089()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook661();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test090()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setSearchHook((TestHook) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test091()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook691((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test093()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook748();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test094()  throws Throwable  {
      Tree tree0 = new Tree();
      LN lN0 = new LN();
      DBIN dBIN0 = new DBIN();
      tree0.hook659(lN0, 4273L, dBIN0, 1974L);
      assertFalse(lN0.containsDuplicates());
  }

  @Test
  public void test095()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook734((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test096()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook679((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook693((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test098()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook750((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test099()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setRoot((ChildReference) null, true);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test100()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook712((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test101()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook682((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test102()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook751();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test103()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      DIN dIN0 = new DIN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.hook662(dIN0, 1157L, 0L, dBIN0);
      //  // Unstable assertion: assertEquals(75L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(75L, dBIN0.getLastId());
  }

  @Test
  public void test104()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook709(dBIN0);
      //  // Unstable assertion: assertEquals(47L, dBIN0.getGeneration());
  }

  @Test
  public void test105()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook739(dBIN0, dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test106()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = null;
      try {
        tree0 = new Tree(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test107()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook752();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test108()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook743((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test109()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook747(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test110()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook694(dBIN0, dBIN0);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test111()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook700((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test112()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook692((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test114()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test115()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.dump();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test116()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<BIN> arrayList0 = new ArrayList<BIN>();
      tree0.hook697(arrayList0);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test117()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        tree0.hook674(byteArray0, byteArray0, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test118()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook663(dIN0, dIN0, (-2831L), (-199L));
      assertFalse(dIN0.isCompressible());
  }

  @Test
  public void test119()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setCkptHook((TestHook) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test120()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedShared((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test121()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook715((byte)16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test122()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook749();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test123()  throws Throwable  {
      Tree tree0 = new Tree();
      boolean boolean0 = tree0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test124()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook745((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test125()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook707(dIN0);
      //  // Unstable assertion: assertEquals(43L, dIN0.getGeneration());
  }

  @Test
  public void test126()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setTreeStatsAccumulator((TreeWalkerStatsAccumulator) null);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test127()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test128()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook736(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test129()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getFirstNode();
      assertNull(iN0);
  }

  @Test
  public void test130()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook710(dIN0);
      //  // Unstable assertion: assertEquals(39L, dIN0.getGeneration());
  }

  @Test
  public void test131()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook744(dIN0);
      // Undeclared exception!
      try { 
        tree0.getFirstNode(dIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.DIN cannot be cast to com.sleepycat.je.tree.DBIN
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test132()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook746((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test133()  throws Throwable  {
      Tree tree0 = new Tree();
      DatabaseImpl databaseImpl0 = tree0.getDatabase();
      assertNull(databaseImpl0);
  }

  @Test
  public void test134()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<DatabaseException> arrayList0 = new ArrayList<DatabaseException>();
      tree0.hook676(arrayList0);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test135()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeStats treeStats0 = tree0.getTreeStats();
      assertEquals(0, treeStats0.nRootSplits);
  }

  @Test
  public void test136()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setWaitHook((TestHook) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test137()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.hook729();
      //  // Unstable assertion: assertEquals(56L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test139()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook684((BIN) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test140()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getLastNode();
      assertNull(iN0);
  }

  @Test
  public void test141()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook742((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test142()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      MapLN mapLN0 = new MapLN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, (byte[]) null, (byte[]) null, mapLN0, true, false, false, false);
      //  // Unstable assertion: assertEquals(5L, mapLN0.getLastId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test143()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook738((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test144()  throws Throwable  {
      Tree tree0 = new Tree();
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, (byte[]) null, 0, false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook720();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test145()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook753();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test146()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook689((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }
}
