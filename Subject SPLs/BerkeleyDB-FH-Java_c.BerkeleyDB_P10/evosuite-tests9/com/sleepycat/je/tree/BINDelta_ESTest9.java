/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 11:23:32 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class BINDelta_ESTest9 extends BINDelta_ESTest_scaffolding9 {

  @Test
  public void test00()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("---- Node Id: ");
      // Undeclared exception!
      try { 
        bINDelta0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }



  @Test
  public void test04()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      // Undeclared exception!
      try { 
        bINDelta0.readFromLog((ByteBuffer) null, (byte)19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }


  @Test
  public void test06()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      BINDelta bINDelta0 = new BINDelta();
      dBIN0.latch(false);
      try { 
        bINDelta0.hook612(dBIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DBIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      DBIN dBIN0 = new DBIN();
      try { 
        bINDelta0.hook611(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }



  @Test
  public void test10()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      bINDelta0.dumpLog(stringBuffer0, false);
      assertEquals(142, stringBuffer0.capacity());
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  @Test
  public void test11()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" not valid boolean ");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      bINDelta0.writeToLog(byteBuffer1);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  @Test
  public void test12()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      int int0 = bINDelta0.getLogSize();
      assertEquals(16, int0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  @Test
  public void test13()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("DqWCt$~6M3:o&{KH");
      // Undeclared exception!
      try { 
        bINDelta0.readFromLog(byteBuffer0, (byte)103);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }



  @Test
  public void test16()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      boolean boolean0 = bINDelta0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  @Test
  public void test17()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      bINDelta0.getDbId();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("DqWCt$~6M3:o&{KH");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        bINDelta0.readFromLog(byteBuffer1, (byte)103);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }


  @Test
  public void test19()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      BIN bIN0 = new BIN();
      bINDelta0.hook612(bIN0);
      bINDelta0.hook611(bIN0);
      //  // Unstable assertion: assertEquals(0L, bIN0.getGeneration());
      //  // Unstable assertion: assertEquals((-1L), bINDelta0.getLastFullLsn());
  }




  @Test
  public void test23()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      bINDelta0.postLogWork((-9223372036854775808L));
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

}
