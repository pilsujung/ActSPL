/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Dec 22 05:35:11 GMT 2022
 */

package org.prevayler.implementation.publishing;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class CentralPublisher_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.prevayler.implementation.publishing.CentralPublisher"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "MS949"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\user\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "KR"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\user\\Downloads\\eclipse-java-mars-2-win32-x86_64\\Prevayler_P3"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\user"); 
    java.lang.System.setProperty("user.language", "ko"); 
    java.lang.System.setProperty("user.name", "user"); 
    java.lang.System.setProperty("user.timezone", "Asia/Seoul"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CentralPublisher_ESTest_scaffolding.class.getClassLoader() ,
      "org.prevayler.implementation.clock.BrokenClock",
      "org.prevayler.implementation.publishing.CentralPublisher",
      "org.prevayler.implementation.publishing.TransactionPublisher",
      "org.prevayler.implementation.Capsule",
      "org.prevayler.implementation.TransactionWithQueryCapsule",
      "org.prevayler.implementation.publishing.AbstractPublisher",
      "org.prevayler.foundation.monitor.SimpleMonitor",
      "org.prevayler.implementation.clock.PausableClock",
      "org.prevayler.implementation.TransactionGuide",
      "org.prevayler.implementation.TransactionCapsule",
      "org.prevayler.foundation.monitor.Monitor",
      "org.prevayler.implementation.clock.MachineClock",
      "org.prevayler.foundation.monitor.LoggingMonitor",
      "org.prevayler.implementation.journal.Journal",
      "org.prevayler.implementation.PrevaylerDirectory",
      "org.prevayler.implementation.TransactionTimestamp",
      "org.prevayler.foundation.Chunk",
      "org.prevayler.foundation.Guided",
      "org.prevayler.implementation.publishing.POBox",
      "org.prevayler.implementation.PrevaylerDirectory$1",
      "org.prevayler.implementation.PrevaylerDirectory$2",
      "org.prevayler.foundation.Cool",
      "org.prevayler.foundation.FileManager",
      "org.prevayler.implementation.publishing.TransactionSubscriber",
      "org.prevayler.implementation.journal.PersistentJournal",
      "org.prevayler.Clock",
      "org.prevayler.foundation.Turn",
      "org.prevayler.foundation.DurableOutputStream",
      "org.prevayler.implementation.journal.TransientJournal",
      "org.prevayler.foundation.serialization.Serializer",
      "org.prevayler.foundation.monitor.NullMonitor"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.prevayler.implementation.Capsule", false, CentralPublisher_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.prevayler.implementation.publishing.TransactionSubscriber", false, CentralPublisher_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CentralPublisher_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.prevayler.implementation.publishing.AbstractPublisher",
      "org.prevayler.implementation.publishing.CentralPublisher",
      "org.prevayler.implementation.clock.BrokenClock",
      "org.prevayler.implementation.clock.MachineClock",
      "org.prevayler.implementation.journal.TransientJournal",
      "org.prevayler.implementation.clock.PausableClock",
      "org.prevayler.foundation.Turn",
      "org.prevayler.implementation.publishing.POBox",
      "org.prevayler.foundation.Cool",
      "org.prevayler.implementation.TransactionTimestamp",
      "org.prevayler.foundation.Guided",
      "org.prevayler.implementation.TransactionGuide",
      "org.prevayler.foundation.Chunk",
      "org.prevayler.implementation.Capsule",
      "org.prevayler.implementation.TransactionCapsule",
      "org.prevayler.implementation.PrevaylerDirectory",
      "org.prevayler.foundation.monitor.NullMonitor",
      "org.prevayler.implementation.journal.PersistentJournal",
      "org.prevayler.foundation.monitor.LoggingMonitor",
      "org.prevayler.foundation.monitor.SimpleMonitor",
      "org.prevayler.implementation.PrevaylerDirectory$1",
      "org.prevayler.implementation.PrevaylerDirectory$2",
      "org.prevayler.foundation.FileManager"
    );
  }
}
